//!-----------------------------------------------------------------------------------------------
// #region "switch" –ø–æ—à—É–∫ –∑—ñ —Å–ø–∏—Å–∫—É "case"

// —Å—Ç–æ–∏–º–æ—Å—Ç—å
// let cost;
// let asses;
// –ø–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–∫—É–ø–∫–∏
// const lvl1 = "free"
// –≤—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–∫—É–ø–∫–∏
// const lvl2 = "pro"
// —Ç—Ä–µ—Ç–∏–π –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–∫—É–ø–∫–∏
// const lvl3 = "premium"
// let a = prompt ("–£ –Ω–∞—Å –≤ –∞—Å–æ—Ä—Ç–µ–º–µ–Ω—Ç–µ –µ—Å—Ç—å 3 –≤–∏–¥–∞ –∞–∫–∞—É–Ω—Ç–∞ Free, Pro, Premium. –ö–∞–∫–æ–π –∞–∫–∞—É–Ω—Ç –≤—ã–±–µ—Ä–∏—Ç–µ?") //–±–∞–Ω–Ω–µ—Ä —Å –≤—ã–±–æ—Ä–æ–º –∞–∫–∞—É–Ω—Ç–∞

// –ø–æ–∏—Å–∫ –≤—ã–±—Ä–∞–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–º –∞–∫–∞—É–Ω—Ç–∞ –∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ –µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
// switch (a.toLowerCase()) {
//–¥–æ—Å—Ç—É–ø –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
// case lvl1:
// 	cost = "is-open-1" //—Ç—É—Ç —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è "toggle" –∫ —Å—Ç—Ä–∞–Ω–∏—á–∫–µ –∫–ª–∞—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –¥–æ—Å—Ç—É–ø
// 	asses = "–í–∞–º –æ—Ç–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø Free —É—Ä–æ–≤–Ω—è"
// break;
//–¥–æ—Å—Ç—É–ø –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è
// case lvl2:
// 	cost = "is-open-2" //—Ç—É—Ç —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è "toggle" –∫ —Å—Ç—Ä–∞–Ω–∏—á–∫–µ –∫–ª–∞—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –¥–æ—Å—Ç—É–ø
// 	asses = "–í–∞–º –æ—Ç–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø pro —É—Ä–æ–≤–Ω—è"
// break;
//–¥–æ—Å—Ç—É–ø —Ç—Ä–µ—Ç—å–µ–≥–æ —É—Ä–æ–≤–Ω—è
// 	case lvl3:
// 		cost = "is-open-3" //—Ç—É—Ç —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è "toggle" –∫ —Å—Ç—Ä–∞–Ω–∏—á–∫–µ –∫–ª–∞—Å–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç –¥–æ—Å—Ç—É–ø
// 		asses = "–í–∞–º –æ—Ç–∫—Ä—ã—Ç –¥–æ—Å—Ç—É–ø premium —É—Ä–æ–≤–Ω—è"
// 	default :

// 	break;
// }

// alert (asses);

// #endregion
//!-----------------------------------------------------------------------------------------------

//!-----------------------------------------------------------------------------------------------
// #region –í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å

// let x = prompt("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è –≤ —Å—Ç–µ–ø–µ–Ω—å");
// let y = prompt("–≤–≤–µ–¥–∏—Ç–µ —Å—Ç–µ–ø–µ–Ω—å –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤–æ–¥–∏—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ");
// let c = confirm("–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞–∫—Ç: " + Math.pow(x, y));

// let x = prompt("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è –≤ —Å—Ç–µ–ø–µ–Ω—å");
// x = Number.parseFloat(x);
// x = Number(x.toFixed(2));
// let y = prompt("–≤–≤–µ–¥–∏—Ç–µ —Å—Ç–µ–ø–µ–Ω—å –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤–æ–¥–∏—Ç—å —ç—Ç–æ —á–∏—Å–ª–æ");
// y = Number.parseFloat(y);
// y = Number(y.toFixed(2));

// #endregion
//!-----------------------------------------------------------------------------------------------

//!-----------------------------------------------------------------------------------------------

// #region –∫—Ä—É—Ç–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ if,else, &&, ||

// const x1 = 20;
// const x2 = 100;

// let number = prompt("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∞ –º—ã —Å—Ä–∞–≤–Ω–∏–º –µ–≥–æ —Å –¥–∞–Ω–Ω—ã–º–∏");
// number = Number.parseFloat(number);
// number = number.toFixed(3);
// number = Number(number);

// –ü–µ—Ä–≤–æ–µ —É—Å–ª–æ–≤–∏–µ < x1
// if (number < x1) {
// 	alert(`–í–∞—à–µ —á–∏—Å–ª–æ ${number} –º–µ–Ω—å—à–µ —á–µ–º 20`);
// } else {
// 	alert (`–≤–∞—à–µ —á–∏—Å–ª–æ ${number} –±–æ–ª—å—à–µ —á–µ–º 20`);
// }

// –í—Ç–æ—Ä–æ–µ —É—Å–ª–æ–≤–∏–µ > x2
// if (number > x2) {
// 	alert (`–í–∞—à–µ —á–∏—Å–ª–æ ${number} –±–æ–ª—å—à–µ —á–µ–º 100`);
// }else {
// 	alert (`–í–∞—à–µ —á–∏—Å–ª–æ ${number} –º–µ–Ω—å—à–µ —á–µ–º 100`);
// }

// –¢—Ä–µ—Ç—å–µ —É—Å–ª–æ–≤–∏–µ > x1 && <x2

// if(number >= x1 && number <= x2){
// 	alert (`–≤–∞—à–µ —á–∏—Å–ª–æ ${number} –ø–æ–ø–∞–¥–∞–µ—Ç –≤–æ –≤–Ω—É—Ç—Ä—å –∫–æ—Ä–¥–∏–Ω–∞—Ç—ã x1 –∏ x2`);
// }else {
// 	alert (`–≤–∞—à–µ —á–∏—Å–ª–æ ${number} –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –≤–æ –≤–Ω—É—Ç—Ä—å –∫–æ—Ä–¥–∏–Ω–∞—Ç—ã x1 –∏ x2`);
// }

// –ß–µ—Ç–≤–µ—Ä—Ç–æ–µ —É—Å–ª–æ–≤–∏–µ <x1 || >x2

// 1 –≤–∞—Ä–∏–∞–Ω—Ç
// if (number <=x1){
// 	alert (`–≤–∞—à–µ —á–∏—Å–ª–æ ${number} –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 20`);
// } else if (number >x1 && number <= x2) {
// 	alert (`–≤–∞—à–µ —á–∏—Å–ª–æ ${number} –±–æ–ª—å—à–µ 20 –Ω–æ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 100`);
// } else {
// 	alert (`–≤–∞—à–µ —á–∏—Å–ª–æ ${number} –±–æ–ª—å—à–µ —á–µ–º 100`);
// }
// 2 –≤–∞—Ä–∏–∞–Ω—Ç
// if (number <= x1 || number >= x2){
// 	alert (`–≤–∞—à–µ —á–∏—Å–ª–æ ${number} –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 20 –∏–ª–∏ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 100`);
// } else {
// 	alert (`–≤–∞—à–µ —á–∏—Å–ª–æ ${number} –±–æ–ª—å—à–µ 20 –Ω–æ –º–µ–Ω—å—à–µ —á–µ–º 100`);
// }
// -------------------------------------------------------------
// let good;
// const online = confirm ("–¢—ã –≤ –æ–Ω–ª–∞–π–Ω–µ?");
// const friend = confirm ("–¢—ã –≤ —Å–ø–∏—Å–∫–µ –¥—Ä—É–∑–µ–π");
// const afk = confirm ("–£ —Ç–µ–±—è –Ω–µ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å");

// if (online && friend && afk) {
// 	let a = prompt ("–∫–∞–∫ –¥–µ–ª–∞ good or no?");
// 	if (a == good) {
// 		alert("—Ä–∞–¥ –∑–∞ —Ç–µ–±—è");
// 	}else {
// 		alert("–ë—É–¥–µ–º –≤–µ—Ä–∏—Ç—å –≤ –ª—É—á—à–µ–µ!")
// 	}

// }

// #endregion
//!-----------------------------------------------------------------------------------------------

//!-----------------------------------------------------------------------------------------------
// #region –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ switch

// const option = 3;
// let message = "";

// switch (option) {
// 	case 1:
// 	message = console.log("–≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –∑–∞–≤—Ç—Ä–∞ –ø–æ—Å–ª–µ 12:00");
// 	break;

// 	case 2:
// 		message = console.log("–≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –∑–∞–≤—Ç—Ä–∞ –ø–æ—Å–ª–µ 13:00");
// 		break;

// 	case 3:
// 	message = console.log("–≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä –∑–∞–≤—Ç—Ä–∞ –ø–æ—Å–ª–µ 14:00");
// 	break;

// 	default:
// 		message = console.log("wtf")
// }

// #endregion
//!-----------------------------------------------------------------------------------------------

//!-----------------------------------------------------------------------------------------------
//#region –ù–∞–π–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∞—Å–∏–≤–µ.

// const baza = ["Denys", "Alex", "Liza", "Artem", "Jon", "Gilbert", "Dima", "Mira"];

// const login = "Liza";

// for (let i = 0; i<baza.length; i+=1){
// 	if (baza[i] === login) {
// 		console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${login} –Ω–∞–π–¥–µ–Ω`)
// 		break;
// 	}
// }

// for (const name of baza){
// 	if (name === login){
// 		console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${login} –Ω–∞–π–¥–µ–Ω`);
// 		break;
// 	}
// 		console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${login} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
// }

// if (baza.includes(login)){
// 	console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${login} –Ω–∞–π–¥–µ–Ω`);
// }

// const a = baza.includes(login) ? console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${login} –Ω–∞–π–¥–µ–Ω`) : console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${login} –Ω–µ –Ω–∞–π–¥–µ–Ω`);

//#endregion
//!-----------------------------------------------------------------------------------------------

//!-----------------------------------------------------------------------------------------------
//#region –°–º–µ–Ω–∞ –±–æ–ª—å—à–∏—Ö –±—É–∫–≤ –Ω–∞ –º–∞–ª–µ–Ω–∏–∫–∏–µ –∏ –º–∞–ª–µ–Ω—å–∫–∏–µ –Ω–∞ –±–æ–ª—å—à–∏–µ

// let string = "HFddOlaA";
// let invertedString = '';
// string = string.split('')
// console.log(string)

// for (let i = 0; i<string.length; i+=1){

//1
// if (string[i] === string[i].toUpperCase()){
// 	console.log("—ç—Ç–∞ –±—É–∫–≤–∞ –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ " + string[i])
// 	invertedString = invertedString + string[i].toLowerCase()
// } else {
// 	invertedString = invertedString + string[i].toUpperCase()
// }

//2
// invertedString = string[i] === string[i].toUpperCase() ? invertedString += string[i].toLowerCase() : invertedString += string[i].toUpperCase();
// }

// console.log(invertedString)

//3
// const string = "aleksandR is degan";

// function invert (words) {
// let resultString = ""
// 	for(let i = 0; i < words.length; i+=1){
// 		if (words[i] === words[i].toLowerCase()){
// 			resultString += words[i].toUpperCase()
// 		} else {
// 			resultString += words[i].toLowerCase()
// 		}
// 	}
// return resultString;

// }

// const result = invert(string);
// console.log(result)

//#endregion
//!-----------------------------------------------------------------------------------------------

//todo –£—Ä–æ–≤–µ–Ω—å 1.1

// #region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ –î–∞–Ω–æ —á–∏—Å–ª–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –æ–Ω–æ –∏–ª–∏ –Ω–µ—Ç. –í—ã–≤–µ–¥–∏—Ç–µ –æ–± —ç—Ç–æ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å.
// const num = -1;

// if (num < 0) {
// 	console.log(`—á–∏—Å–ª–æ ${num} –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ`)
// } else {
// 	console.log(`—á–∏—Å–ª–æ ${num} –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ`)
// }

// function number (num) {
// 	if (num > 0){
// 		console.log("–ß–∏—Å–ª–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ")
// 	} else if (num === 0){
// 		console.log("–ß–∏—Å–ª–æ —Ä–∞–≤–Ω–æ 0")
// 	} else {
// 		console.log("–ß–∏—Å–ª–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ")
// 	}
// 	return num;
// }

// const x = number(-1)
// console.log (x)

// #endregion about

// #region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞. –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª–∏–Ω—É —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏.

// const text = "string";
// console.log(text.length);

// #endregion

// #region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞. –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª —Å—Ç—Ä–æ–∫–∏.

// const text = "string";
// console.log(text.slice(-1));

// #endregion

// #region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–æ —á–∏—Å–ª–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á–µ—Ç–Ω–æ–µ –æ–Ω–æ –∏–ª–∏ –Ω–µ—Ç.

// const num = 9;

// if (num % 2 === 0) {
// 	console.log (`–≤–∞—à–µ —á–∏—Å–ª–æ ${num} —á–µ—Ç–Ω–æ–µ`);
// } else {
// 	console.log (`–≤–∞—à–µ —á–∏—Å–ª–æ ${num} –Ω–µ —á–µ—Ç–Ω–æ–µ`);
// }

//#endregion

// #region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω—ã –¥–≤–∞ —Å–ª–æ–≤–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–µ—Ä–≤—ã–µ –±—É–∫–≤—ã —ç—Ç–∏—Ö —Å–ª–æ–≤ —Å–æ–≤–ø–∞–¥–∞—é—Ç.

// const text1 = "qword";
// const text2 = "words";

// if (text1.charAt(0).toLowerCase() === text2.charAt(0).toLowerCase()) {
// 	console.log(`–ø–µ—Ä–≤—ã–µ –±—É–∫–≤—ã —Å–ª–æ–≤  ${text1}, ${text2} —Å–æ–≤–ø–∞–¥–∞—é—Ç`);
// } else {
// 	console.log(`–ø–µ—Ä–≤—ã–µ –±—É–∫–≤—ã —Å–ª–æ–≤  ${text1}, ${text2} –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç`);
// }

// #endregion

// #region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–æ —Å–ª–æ–≤–æ. –ü–æ–ª—É—á–∏—Ç–µ –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É. –ï—Å–ª–∏ —Å–ª–æ–≤–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –º—è–≥–∫–∏–π –∑–Ω–∞–∫, —Ç–æ –ø–æ–ª—É—á–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É.

// let word = "–≤–µ—Ç–≤—å"
// word = word.trim().toLowerCase()

// const letter = "—å"

// if (word.slice(-1) === letter) {
// 	let x = word [word.length - 2]
// 	console.log(x)

// } else {
// 	console.log (word);
// }

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 1.2

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–æ —á–∏—Å–ª–æ. –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ—Å–ª–µ–¥–Ω—é—é —Ü–∏—Ñ—Ä—É —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞.

// let num = 45567;
// num = num.toString().slice(-1)
// num = Number(num)
// console.log(num)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–æ —á–∏—Å–ª–æ. –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä–≤—É—é —Ü–∏—Ñ—Ä—É —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞.

// let num = 22313;

// num = Number(num.toString().charAt(0));
// console.log(num)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–æ —á–∏—Å–ª–æ. –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Å—É–º–º—É –ø–µ—Ä–≤–æ–π –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ü–∏—Ñ—Ä—ã —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞.

// let num = 3457;

// let result;

// result = Number(num.toString().charAt(0)) + Number(num.toString().slice(-1));
// console.log(result)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–æ —á–∏—Å–ª–æ. –í—ã–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ü–∏—Ñ—Ä –≤ —ç—Ç–æ–º —á–∏—Å–ª–µ.

// let num = 17126;

// num = num.toString().length;
// console.log(num);

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω—ã –¥–≤–∞ —á–∏—Å–ª–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–µ—Ä–≤—ã–µ —Ü–∏—Ñ—Ä—ã —ç—Ç–∏—Ö —á–∏—Å–µ–ª —Å–æ–≤–ø–∞–¥–∞—é—Ç.

// let num1 = 23;
// let num2 = 23;

// num1= Number(num1.toString().charAt(0));
// num2= Number(num2.toString().charAt(0));

// if (num1 === num2) {
// 	console.log("—á–∏—Å–ª–∞ —Å–æ–≤–ø–∞–¥–∞—é—Ç")
// } else {
// 	console.log("—á–∏—Å–ª–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç")
// }

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 1.3

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞. –ï—Å–ª–∏ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Å–∏–º–≤–æ–ª–∞, –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏.

// let string = "some word";

// if (string.length > 1) {
// 	let letter = string[string.length - 2]
// 	console.log(letter)
// }

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω—ã –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ –≤—Ç–æ—Ä–æ–µ.

// const num1 = 323;
// const num2 = 23;

// let result = (num1 / num2);

// result = Number.parseInt(result);
// console.log(result);

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 1.4

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100.

// const num = 100

// for (let i = 1; i <= num; i+=1) {
// 	console.log(i)
// }

// function number (min, max) {
// for (let i = min; i<=max; i+=1) {
// 	console.log(i);
// }
// }

// number(1, 13)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –æ—Ç -100 –¥–æ 0.

// for (let i = -100; i <= 0; i+=1){
// 	console.log (i)
// }

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –æ—Ç 100 –¥–æ 1.

// for (let i = 100; i>=1; i-=1) {
// 	console.log(i)
// }

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –∏–∑ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –æ—Ç 1 –¥–æ 100.

// for (let i = 1; i<=100; i+=1) {

// 	if (i % 2 === 0){
// 		console.log(`–Ω–æ–º–µ—Ä ${i}`)
// 	}
// }

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —á–∏—Å–ª–∞ –∫—Ä–∞—Ç–Ω—ã–µ —Ç—Ä–µ–º –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 1 –¥–æ 100.

// for(let i = 3; i<=100; i+=3){
// 	console.log(i);
// }

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 1.5

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 100.

// let sum = 0;
// for (let i = 0; i<=100; i+=1) {
// 	sum = i + sum
// }
// console.log(sum)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 1 –¥–æ 100.

// let sum = 0;

// for (let i = 0; i<=100; i+=1){
// 	if (i%2 === 0) {
// 		sum = i + sum
// 	}
// }
// console.log(sum)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö –Ω–µ—á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 1 –¥–æ 100.

// let sum = 0;

// for (let i = 0; i<=100; i+=1){
// 	if (i%2 !== 0){
// 		sum = i + sum
// 	}
// }
// console.log(sum)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω—ã –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞. –ù–∞–π–¥–∏—Ç–µ –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —á–∏—Å–ª–∞ –Ω–∞ –≤—Ç–æ—Ä–æ–µ.

// const num1 = 11;
// const num2 = 2;

// let sum;

// sum = num1 % num2;
// console.log(sum);

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞. –ü–µ—Ä–µ–±–µ—Ä–∏—Ç–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ –æ—á–µ—Ä–µ–¥–∏ –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å –∫–æ–Ω—Ü–∞ —Å—Ç—Ä–æ–∫–∏.

// let string = "hello world";

// string = string.split(' ');
// string = string.join('');

// console.log(string.length )

// for (let i = string.length - 1; i>=0; i-=1){
// 	console.log(string[i]);
// }

// let string1 = "hello world";

// for(const x of string1){
// 	console.log(x)
// }

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 1.6

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏. –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É –∫–≤–∞–¥—Ä–∞—Ç–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.

// const mas = [2,2,2,2];
// let sum = 0;

// for (let i = 0; i < mas.length; i+=1){
// 	sum += Math.pow(mas[i], 2);
// };

// console.log(sum);

// function array (mas){
// 	let sum = 0;
// 	for (let i = 0; i < mas.length; i+=1){
// 		sum += Math.pow(mas[i], 2)
// 	}
// 	return sum;

// }

// console.log(array([2,2,2,2]))

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏. –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –∫–æ—Ä–Ω–µ–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.

// const mas = [4,4,4,4];
// let sum = 0;

//1

// for (let i = 0; i < mas.length; i+=1){
// 	sum += Math.sqrt(mas[i]);
// }

//2

// for (const masOne of mas){
// 	sum += Math.sqrt(masOne);
// };

// console.log(sum);

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏. –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.

// const mas = [1, -5, 6, 10, 4, -1];

// let sum = 0;

// for (let i = 0; i < mas.length; i += 1){
// 	if (mas[i] >= 0){
// 		sum += mas[i];
// 	};
// };

// console.log(sum);

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏. –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É —Ç–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –Ω—É–ª—è –∏ –º–µ–Ω—å—à–µ –¥–µ—Å—è—Ç–∏.

// const mas = [10, 5, 5, 5, 11, 20, 5, 6, 1];
// let caunt = 0;
// let sum = 0;

// for ( let i = 0; i < mas.length; i+=1){
// 	if (mas[i] > 0 && mas[i] < 10 && caunt !== 3) {
// 		sum += mas[i];
// 		caunt+=1
// 	}

// }

// console.log(sum);

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 1.7

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞: "abcde" –ü–æ–ª—É—á–∏—Ç–µ –º–∞—Å—Å–∏–≤ –±—É–∫–≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏.

// const text = "abcde";

// const textResult = text.split('');

// console.log(textResult);

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: 12345 –ü–æ–ª—É—á–∏—Ç–µ –º–∞—Å—Å–∏–≤ —Ü–∏—Ñ—Ä —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞. *

// const number = 12345;

// const nemberMas = Array.from(String(number), Number);

// console.log (nemberMas);

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: 12345 –ü–µ—Ä–µ–≤–µ—Ä–Ω–∏—Ç–µ –µ–≥–æ: 54321

// const number = 123445;
// let num = 0;

// const numberArrey = Array.from(String(number), Number);

// for (let i = numberArrey.length - 1; i >= 0; i-=1){

// num += String(numberArrey[i])
// }

// console.log(Number(num))

///////////// let numResult = Array.from(String(num), Number);

// numResult.splice(0, 1);
// let n = Number(numResult.join(''));
///////////// console.log(n)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: 12345 –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É —Ü–∏—Ñ—Ä —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞.

// const num = 12345;

// const numArray = Array.from(String(num), Number);

// let sum = 0;

// for (let i = 0; i < numArray.length; i+=1){
// 	sum+=numArray[i]
// }

// console.log(sum)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 1.8

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –æ—Ç 1 –¥–æ 10.

// let mas = [];

// let max = 11;

// let min = 1;

// for (let i = min; i<=max; i+=1){
// mas.push(i)
// }

// console.log(mas)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ —á–µ—Ç–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏–∑ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –æ—Ç 1 –¥–æ 100.

// const mas = [];

// const min = 1;
// const max = 100;

// for (let i = min; i <= 100; i+=1){
// 	if (i % 2 === 0) {
// 		mas.push(i)
// 	}
// }

// console.log(mas)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å –¥—Ä–æ–±—è–º–∏: [1.456, 2.125, 3.32, 4.1, 5.34] –û–∫—Ä—É–≥–ª–∏—Ç–µ —ç—Ç–∏ –¥—Ä–æ–±–∏ –¥–æ –æ–¥–Ω–æ–≥–æ –∑–Ω–∞–∫–∞ –≤ –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏.

// const mas = [1.456, 2.125, 3.32, 4.1, 5.34];

// for (let i = 0; i < mas.length; i+=1){
// mas[i] = Number(mas[i].toFixed(1))
// }
// console.log(mas)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 1.9

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏. –û—Å—Ç–∞–≤—å—Ç–µ –≤ —ç—Ç–æ–º –º–∞—Å—Å–∏–≤–µ —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –Ω–∞ http://.

// const mas = ['http://accc', '://adccc', 'http://accfff', 'den', 'eeeeeeeeee', 'CD\SCDASC'];

// const mas2 = []

// const http = 'http://'

// for (let i = 0; i < mas.length; i+=1){

// 	if (mas[i].slice(0, 7) === http){
// 		mas2.push(mas[i])
// 	}
// }
// console.log(mas2)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏. –û—Å—Ç–∞–≤—å—Ç–µ –≤ —ç—Ç–æ–º –º–∞—Å—Å–∏–≤–µ —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –Ω–∞ .html.

// const mas = ['http://accc', '://adccc.html', 'http://accfff.html', 'den', 'eeeeeeeeee', 'CD\SCDASC'];

// const html = '.html';

// const mas2 = [];

// for (let i = 0; i < mas.length; i+=1){
// 	if (mas[i].slice(-5) === html){
// 		mas2.push(mas[i])
// 	}
// }

// console.log(mas2)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏. –£–≤–µ–ª–∏—á—å—Ç–µ –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –Ω–∞ 10 –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤.

// const mas = [2, 4, 10, 20, 4];
// const mas2 = []

// for (let i = 0; i<mas.length; i+=1){
// 	mas2.push(mas[i]*1.1)
// }

// console.log (mas2)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 1.10

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏–∑ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –æ—Ç 1 –¥–æ 100.

// const mas = [];

// const min = 1;

// const max = 100;

// const value = 20;

// for (let i = 0; i <= value; i+=1){
// 	mas.push(Number((Math.random()*(max - min) + min).toFixed(0)))
// }

// console.log(mas)

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: 12345 –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ –µ–≥–æ —Å–∏–º–≤–æ–ª—ã —Å –∫–æ–Ω—Ü–∞.

// const num = 12345;

// const numArray = Array.from(String(num), Number);

// let numResult = '';

// for (let i = numArray.length - 1; i>=0; i-=1){
// 	numResult+= String(numArray[i]);
// }

// console.log(Number(numResult))

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω—ã –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞: let arr1 = [1, 2, 3]; let arr2 = [4, 5, 6]; –°–ª–µ–π—Ç–µ —ç—Ç–∏ –º–∞—Å—Å–∏–≤—ã –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤: [1, 2, 3, 4, 5, 6]

// const arr1 = [1, 2, 3];

// const arr2 = [4, 5, 6];

// const mas = arr1.concat(arr2);

// console.log(mas);

//#endregion

//#region üèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅüèÅ–î–∞–Ω –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –º–∞—Å—Å–∏–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫–æ–π: [1, 2, 3, 4, 5, 6] –ü–æ –æ—á–µ—Ä–µ–¥–∏ –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–¥–º–∞—Å—Å–∏–≤—ã –∏–∑ –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞—à–µ–≥–æ –º–∞—Å—Å–∏–≤–∞: [1, 2] [3, 4] [5, 6]   *****

// const mas = [1, 2, 3, 4, 5, 6];

// const mas1 = [];

// const mas2 = [];

// const mas3 = [];

// for (let i = 0; i < mas.length; i+=1){
// 	if (mas[i]<= mas[1]){
// 		mas1.push(mas[i])
// 	} else if (mas[i] >= mas[2]&& mas[i]<=mas[3]){
// 		mas2.push(mas[i])
// 	} else {
// 		mas3.push(mas[i])
// 	}
// }

// console.log(mas1, mas2, mas3)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 2.1

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞. –ù–∞–π–¥–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é –ø–µ—Ä–≤–æ–≥–æ –Ω—É–ª—è –≤ —Å—Ç—Ä–æ–∫–µ.

// const string = "kjddkBIBSDBIkmsdk0msmd"

// function whereIsZero (finding) {

// const zero = 0;

// for (let i = 0; i < finding.length; i+=1){

// 	if (Number(finding[i]) !== zero){
// 		continue;
// 	} else {
// 		let index = finding.indexOf(finding[i]);
// 		return console.log(`–í –¥–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ –µ—Å—Ç—å 0 –∏ –æ–Ω –Ω–∞ ${index} –ø–æ–∑–∏—Ü–∏–∏`)
// 	}

// }

// }

// console.log(whereIsZero(string))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —á–∏—Å–ª–∞ –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 1 –¥–æ 1000, —Å—É–º–º–∞ –ø–µ—Ä–≤–æ–π –∏ –≤—Ç–æ—Ä–æ–π —Ü–∏—Ñ—Ä—ã –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–≤–Ω–∞ –ø—è—Ç–∏.

// function allNumberForFive (cauntingFiveMin, cauntingFiveMax) {

// for (let masMini = cauntingFiveMin; masMini <= cauntingFiveMax; masMini+=1) {

// 	let testMas = Array.from(String(masMini), Number);

// 	let total  = 0;
// 	for (let i = 0; i < testMas.length; i+=1) {

// 		total = testMas[0]+testMas[1]
// 		if (total === 5) {
// 			let result = Number(testMas.join(''))
// 			console.log(result)
// 		}

// 	}

// }

// }

// allNumberForFive(1,10000)

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω –º–∞—Å—Å–∏–≤. –£–¥–∞–ª–∏—Ç–µ –∏–∑ –Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∑–∞–¥–∞–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º.

// const mas = [4,6,12,44,1,6,6,3]

// function delNum (fromMas, del) {
// const newMas = [];
// 	for (let i = 0; i < fromMas.length; i+=1){
// 		console.log(fromMas[i])
// 		if (fromMas[i] !== del){
// 			newMas.push(fromMas[i])
// 		}
// 	}
// 	return newMas;

// }

// const delResult = delNum(mas, 6)

// console.log(delResult)

//#endregion

//#region  üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –º–∞—Å—Å–∏–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫–æ–π: [1, 2, 3, 4, 5, 6] –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É –ø–µ—Ä–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.

// const mas = [1, 2, 3, 4, 5, 6];

// function halfSumMas (sumMas) {
// 	let total = 0;

// 	for (let i = 0; i < sumMas.length / 2; i+=1) {
// 		total += sumMas[i]
// 	}
// return total;
// }

// const resultHalfSum = halfSumMas(mas);

// console.log(resultHalfSum)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 2.2

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏. –ü–æ–¥—Å—á–∏—Ç–∞–π—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª –≤ —ç—Ç–æ–º –º–∞—Å—Å–∏–≤–µ.

// const mas = [-1, -2, 3, -5, 4, 9, -1];

// function cauntingMinusFromMas (cauntingMas) {

// 	let total = 0;

// 	for (let i = 0; i < cauntingMas.length; i+=1) {
// 		if (cauntingMas[i] < 0) {
// 			total += 1
// 		}
// 	}
// return total;
// }

// const cauntingMinus = cauntingMinusFromMas(mas);

// console.log (cauntingMinus)

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏. –û—Å—Ç–∞–≤—å—Ç–µ –≤ –Ω–µ–º —Ç–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞.

// const mas = [-1, -2, 3, -5, 4, 9, -1];

// function onlyPlus (fromMas) {
// let onlyPlusNumbers = [];

// for (let i = 0; i < fromMas.length; i+=1) {
// 	if (fromMas[i] > 0) {
// 		onlyPlusNumbers.push(fromMas[i])
// 	}

// }

// return onlyPlusNumbers;

// }

// const onlyPlusNumbers = onlyPlus(mas)

// console.log(onlyPlusNumbers)

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞. –£–¥–∞–ª–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª –∏–∑ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏.

// const string = "asdfghjkl";

// function delOlmostLastItem (delItem) {
// let total = "";
// 	for(let i = 0; i < delItem.length; i+=1) {
// 		total = delItem.length - 2;
// 	}
// 	return delItem[total];
// }

// const item = delOlmostLastItem(string);

// console.log(item)

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –º–∞—Å—Å–∏–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫–æ–π: [1, 2, 3, 4, 5, 6] –ü–æ–¥–µ–ª–∏—Ç–µ —Å—É–º–º—É –ø–µ—Ä–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –Ω–∞ —Å—É–º–º—É –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

// const mas = [10, 20, 3, 4, 5, 6];

// function sumTwoMas (testMas) {

// let total1 = 0;
// let total2 = 0;

// 	for (let i = 0; i < testMas.length / 2; i += 1){
// 		total1 += testMas[i]
// 	}

// 	for (let i = testMas.length / 2; i < testMas.length; i+=1) {
// 		total2+=testMas[i]
// 	}
// return total1 / total2
// }

// const sum = sumTwoMas(mas);

// console.log(sum)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 2.3

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω—ã –¥–≤–∞ —Å–ª–æ–≤–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –±—É–∫–≤–∞ –ø–µ—Ä–≤–æ–≥–æ —Å–ª–æ–≤–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø–µ—Ä–≤–æ–π –±—É–∫–≤–æ–π –≤—Ç–æ—Ä–æ–≥–æ —Å–ª–æ–≤–∞.

// const word1 = "hello";

// const word2 = "olla";

// function theSeymOrNo (firstWord, secondWord) {
// let total1 = "";
// let total2 = "";

// for (let i = 0; i < firstWord.length; i+=1) {
// 	total1 = firstWord.length - 1;
// 	firstWord[total1];
// }

// total2 = secondWord[0];

// if (total2.toLowerCase() === firstWord[total1].toLowerCase()) {
// return console.log (`–ü–æ—Å–ª–µ–¥–Ω—è—è –±—É–∫–≤–∞ "${firstWord[total1]}" –ø–µ—Ä–≤–æ–≥–æ —Å–ª–æ–≤–∞ —Ç–∞–∫–∞—è –∂–µ –∫–∞–∫ –∏ –ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞ "${total2}" –≤—Ç–æ—Ä–æ–≥–æ —Å–ª–æ–≤–∞`);
// } else {
// 	return console.log ('–°–æ–≤–ø–∞–¥–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
// }

// }

// theSeymOrNo(word1, word2);

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞. –ù–∞–π–¥–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é —Ç—Ä–µ—Ç—å–µ–≥–æ –Ω—É–ª—è –≤ —Å—Ç—Ä–æ–∫–µ.

// const string = "Et0KS0KL0K";

// function whereIsThreeZero (finding) {
// let total = ""
// let totalResult = "000"
// let cauntNull = 0;
// 	for (let i = 0; i < finding.length; i+=1) {
// 		if (finding[i] === '0' && cauntNull !== 4){
// 			total = i
// 			cauntNull += 1
// 			if (totalResult === total && cauntNull === 3) {
// 				return total
// 			}
// 		}
// 	}
// 	return total;
// }

// const result = whereIsThreeZero(string);

// console.log(result)

// #endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω—ã —á–∏—Å–ª–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏: '12,34,56' –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É —ç—Ç–∏—Ö —á–∏—Å–µ–ª.

// const string = '12,34,56';

// let newString = string.replace(',', ' ').replace(',', ' ');
// const mas = newString.split(' ')

// function sum (testMas) {
// 	let total = 0;
// 	for (let i = 0; i < testMas.length; i+=1) {
// 		total+=Number(testMas[i]);
// 	}
// return total
// }

// console.log(sum(mas))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –¥–∞—Ç–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ: '2025-12-31' –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ —ç—Ç—É –¥–∞—Ç—É –≤ —Å–ª–µ–¥—É—é—â–∏–π –æ–±—ä–µ–∫—Ç: { year: '2025', month: '12', day: '31',}

// const dateString = '2025-12-31';
// const [year, month, day] = dateString.split('-');

// const dateObject = {
//     year,
//     month,
//     day,
// };

// console.log(dateObject);
// –í—ã–≤–æ–¥: { year: '2025', month: '12', day: '31' }

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 2.4

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –±—É–∫–≤–∞–º–∏ –∏ —Ü–∏—Ñ—Ä–∞–º–∏. –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é –ø–µ—Ä–≤–æ–π —Ü–∏—Ñ—Ä—ã –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ.

// const string = "sssjwejow3idnw1";

// function findingFirstNumber (testString) {
// 	let result = 0;
// 	for (const item of testString) {

// 		if (Number(item)) {
// 			result = Number(item)
// 			return result;
// 		}
// 	}
// }

// console.log(findingFirstNumber(string))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω –æ–±—ä–µ–∫—Ç —Å –∫–ª—é—á–∞–º–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏. –ó–∞–ø–∏—à–∏—Ç–µ –≤ –ø–µ—Ä–≤—ã–π –º–∞—Å—Å–∏–≤ –∫–ª—é—á–∏ –æ–±—ä–µ–∫—Ç–∞, –∞ –≤–æ –≤—Ç–æ—Ä–æ–π - –∑–Ω–∞—á–µ–Ω–∏—è.

// const keys1 =[];
// const values1 = [];

// const object = {
// 	name: "Denys",
// 	lastName: "Harkusha",
// 	age: 26,
// 	birsDay: [11, 2, 1998],
// 	job: "FrontendDeveloper",

// 	forKeys() {
// 		keys1.push(Object.keys(this))
// 	},
// 	forValues() {
// 		values1.push(Object.values(this))
// 	}
// }
// object.forValues()
// object.forKeys()
// console.log(values1)
// console.log(keys1)

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–æ —á–∏—Å–ª–æ. –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ—Ç–Ω—ã—Ö —Ü–∏—Ñ—Ä –≤ —ç—Ç–æ–º —á–∏—Å–ª–µ.

// let numbers = 2235826596285;
// numbers = String(numbers)
// function evenNumbers (testNumbers) {
// let even = "";
// 	for (let i = 0; i < testNumbers.length; i+=1) {
// 		if (Number(testNumbers[i]) % 2 === 0) {
// 		even += testNumbers[i]
// 		}
// 	}
// 	return Number (even)
// }

// console.log(evenNumbers(numbers))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: 'abcde' –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –≤—Å–µ –Ω–µ—á–µ—Ç–Ω—ã–µ –±—É–∫–≤—ã —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–µ: 'AbCdE'

// let string = 'abcde';

// function evenUpperCase (testString) {
// 	let newString ='';
// 	for (let i = 0; i < testString.length; i+=1){
// 		if ( i % 2 === 0) {
// 			newString += testString[i].toUpperCase()
// 		} else {
// 			newString += testString[i].toLowerCase()
// 		}
// 	}
// 	return newString

// }

// console.log(evenUpperCase(string))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ —Å–ª–æ–≤–∞–º–∏: 'aaa bbb ccc' –°–¥–µ–ª–∞–π—Ç–µ –∑–∞–≥–ª–∞–≤–Ω—ã–º –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–µ: 'Aaa Bbb Ccc';

// let string = 'aaa bbb ccc';

// function firstLetterUpper (testString) {

// 	const firstLetter = testString[0].toUpperCase()
// 	let nextLetter = '';

// 	for (let i = 1; i < testString.length; i+=1) {
// 		if (testString[i] == false) {

// 			nextLetter += ' ' + testString[i+1].toUpperCase()

// 		 } else if ( testString[i] === testString[i].toLowerCase()){

// 			nextLetter += testString[i].toLowerCase()
// 		}
// 	}

// 	return firstLetter + nextLetter
// }

// console.log(firstLetterUpper(string)) // —Ö–∑ –∫–∞–∫ —É–±—Ä–∞—Ç—å –∫–æ–ø–∏—é –º–∞–ª–æ–π –±—É–∫–≤—ã  'Aaa Bbbb Cccc'

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 2.5

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫–∞—è: '023m0df0dfg0' –ü–æ–ª—É—á–∏—Ç–µ –º–∞—Å—Å–∏–≤ –ø–æ–∑–∏—Ü–∏–π –≤—Å–µ—Ö –Ω—É–ª–µ–π –≤ —ç—Ç–æ–π –≤ —Å—Ç—Ä–æ–∫–µ.

// const string = '023m0df0dfg0';

// function findingPozishenNull (testString) {
// const masPozishen = [];

// for (let i = 0; i < testString.length; i+=1) {
// 	if (Number(testString[i]) === 0) {
// 		masPozishen.push(i)
// 	}
// }
// return masPozishen
// }

//  console.log(findingPozishenNull(string))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: 'abcdefg' –£–¥–∞–ª–∏—Ç–µ –∏–∑ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –∫–∞–∂–¥—ã–π —Ç—Ä–µ—Ç–∏–π —Å–∏–º–≤–æ–ª. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–µ: 'abdeg'

// const string = 'abcdefg';

// function deleteEveryTheThree (testString) {

// let newMas = [];
// 	for (let i = 0; i < testString.length; i+=1) {
// 		newMas.push(testString[i]);
// 	}

// 	for (let i = 0; i < newMas.length; i+=1) {
// 		if ( i % 3 === 0 && i !== 0) {
// 			newMas[i-1] = ''
// 		}
// 	}

// return newMas.join('')
// }

// console.log(deleteEveryTheThree(string))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –º–∞—Å—Å–∏–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫–æ–π: [1, 2, 3, 4, 5, 6] –ü–æ–¥–µ–ª–∏—Ç–µ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Å—Ç–æ—è—â–∏—Ö –Ω–∞ —á–µ—Ç–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö, –Ω–∞ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Å—Ç–æ—è—â–∏—Ö –Ω–∞ –Ω–µ—á–µ—Ç–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏—è—Ö.

// const mas = [1, 2, 3, 4, 5, 6];

// function divadeHalfMas (testMas) {
// 	let total1 = 0;
// 	let total2 = 0;

// 	for (let i = 0; i < testMas.length; i+=1) {
// 		if (i % 2 !== 0) {
// 			total1 += testMas[i]
// 		} else {
// 			total2 += testMas[i]
// 		}
// 	}
// return total1 / total2;
// }

// console.log(divadeHalfMas (mas))

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 2.6

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –±—É–∫–≤–∞–º–∏ –∏ —Ü–∏—Ñ—Ä–∞–º–∏. –ü–æ–ª—É—á–∏—Ç–µ –º–∞—Å—Å–∏–≤ –ø–æ–∑–∏—Ü–∏–π –≤—Å–µ—Ö —Ü–∏—Ñ—Ä –∏–∑ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏.

// const string = 'kbejW37HDHDB37HDS8JCNS7';

// function pzishenNumbersFromString (testString) {

// 	const pozishenMas = [];

// 	for (let i = 0; i < testString.length; i+=1){

// 		if (Number(testString[i])) {
// 				pozishenMas.push(i)
// 		}
// 	}
// return pozishenMas;
// }

// console.log(pzishenNumbersFromString(string))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ —á–∏—Å–ª–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫–æ–π: [123, 456, 789] –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ–≤–µ—Ä–Ω–µ—Ç —á–∏—Å–ª–∞ –≤ —ç—Ç–æ–º –º–∞—Å—Å–∏–≤–µ –ø–æ —Å–ª–µ–¥—É—é—â–µ–º—É –ø—Ä–∏–Ω—Ü–∏–ø—É: [321, 654, 987] ‚ùì‚ùì‚ùì

// const mas = [123, 456, 789];

// function fromStarttoEnd (testMas) {
// const resultMas = [];
// const mas1 = [];
// const mas2 = [];
// const mas3 = [];
// mas1.push(testMas[0]); // [1,2,3]
// mas2.push(testMas[1]); // [4,5,6]
// mas3.push(testMas[2]); // [7,8,9]

// const masResult1 = mas1.join('').split(''); // ['123']
// const masResult2 = mas2.join('').split(''); // ['456']
// const masResult3 = mas3.join('').split(''); // ['789']

// const masLastResult1 = [];
// const masLastResult2 = [];
// const masLastResult3 = [];

// 	for (let i = masResult1.length - 1; i >= 0; i-=1) {
// 		masLastResult1.push(masResult1[i])
// 	} // ['3','2','1']
// 	for (let i = masResult2.length - 1; i >= 0; i-=1) {
// 		masLastResult2.push(masResult2[i])
// 	} // ['6','5','4']
// 	for (let i = masResult3.length - 1; i >= 0; i-=1) {
// 		masLastResult3.push(masResult3[i])
// 	} // ['9','8','7']

// 	let massLastResult1 = masLastResult1.join('').split(' '); // ['321']
// 	let massLastResult2 = masLastResult2.join('').split(' '); // ['654']
// 	let massLastResult3 = masLastResult3.join('').split(' '); // ['987']

// 	const newResultMas1 = [];
// 	const newResultMas2 = [];
// 	const newResultMas3 = [];

// 	for (let i = 0; i < 1; i+=1) {
// 		newResultMas1.push(Number(massLastResult1[i]))
// 	}// [321]
// 	for (let i = 0; i < 1; i+=1) {
// 		newResultMas2.push(Number(massLastResult2[i]))
// 	}// [654]
// 	for (let i = 0; i < 1; i+=1) {
// 		newResultMas3.push(Number(massLastResult3[i]))
// 	}// [987]
//  resultMas.push(...newResultMas1, ...newResultMas2, ...newResultMas3)
//  return resultMas //// [321, 654, 987]
// }

// console.log(fromStarttoEnd(mas))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å —á–∏—Å–ª–æ–º: '1234567' –û—Ç–¥–µ–ª–∏—Ç–µ —Ç—Ä–æ–π–∫–∏ —Ü–∏—Ñ—Ä –ø—Ä–æ–±–µ–ª–∞–º–∏, –Ω–∞—á–∏–Ω–∞—è —Å –∫–æ–Ω—Ü–∞ —á–∏—Å–ª–∞. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–µ: '1 234 567' ***

// const string = '1234567';
// const stringMas = string.split('')

// const spaceAfterThree = (testString) => {

// 	let insideString;

// 	for (let i = 1; i < testString.length; i+=4) {

// 		testString.splice(i, 0, ' ')
// 	}
// 	insideString = testString.join('')

// 	return insideString;
// }

// console.log( spaceAfterThree(stringMas))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫–æ–π:[1, 2, 3, 4, 5, 6] –°–ª–µ–π—Ç–µ –ø–∞—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤–º–µ—Å—Ç–µ: [12, 34, 56]

// const mas = [1, 2, 3, 4, 5, 6];

// const twoNombersIsItem = (testMas) => {
// 	const insideMas = []

// 	for(let i = 0; i < testMas.length; i+=2) {
// 		insideMas.push(Number(String(testMas[i]) + String(testMas[i+1])));
// 	}
// 	return insideMas;
// }

// console.log(twoNombersIsItem(mas))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ —Å–ª–æ–≤–∞–º–∏:'aaa bbb ccc eee fff' –°–¥–µ–ª–∞–π—Ç–µ –∑–∞–≥–ª–∞–≤–Ω—ã–º –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –∫–∞–∂–¥–æ–≥–æ –≤—Ç–æ—Ä–æ–≥–æ —Å–ª–æ–≤–∞ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–µ: 'aaa Bbb ccc Eee fff'

// const string = 'aaa bbb ccc eee fff';

// function capitalizeEverySecondWord(testString){
// 	let stringInside = testString.split(' ')

// 	for (let i = 0; i < stringInside.length; i+=2){
// 		stringInside[i] = stringInside[i].charAt(0).toUpperCase() + stringInside[i].slice(1)
// 	}

// 	return stringInside.join(' ')
// }

// console.log(capitalizeEverySecondWord(string))

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 2.7

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: 'a bc def ghij' –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –≤ –≤–µ—Ä—Ö–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –≤—Å–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–∫–≤ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ —Ç—Ä–µ–º. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–µ: 'A BC DEF ghij'

// const string = 'a bc def ghij';

// function mainIsMaxThree (testString) {
// 	let insideString = testString.split(' ');
// 		for (let i = 0; i < insideString.length; i+=1){
// 			if (insideString[i].length <= 3){
// 				insideString[i] = insideString[i].charAt(0).toUpperCase() + insideString[i].slice(1)
// 			}
// 		}
// 		return insideString;
// }

// console.log(mainIsMaxThree(string))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω —Å–∏–º–≤–æ–ª. –£–∑–Ω–∞–π—Ç–µ, –≤ –∫–∞–∫–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ —ç—Ç–æ—Ç —Å–∏–º–≤–æ–ª - –≤ –≤–µ—Ä—Ö–Ω–µ–º –∏–ª–∏ –Ω–∏–∂–Ω–µ–º.

// let letter = '–§';

// if (letter === letter.toLowerCase()){
// 	console.log(`—Å–∏–º–≤–æ–ª ${letter} –≤ –Ω–∏–∂–Ω–µ–º —Ä–∫–≥–∏—Å—Ç—Ä–µ`)
// } else {
// 	console.log(`—Å–∏–º–≤–æ–ª ${letter} –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–∫–≥–∏—Å—Ç—Ä–µ`)
// }

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–∞–∫–æ–µ: 123789 –£–¥–∞–ª–∏—Ç–µ –∏–∑ —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞ –≤—Å–µ –Ω–µ—á–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –ø–æ–ª—É—á–∏—Ç—Å—è —Ç–∞–∫–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: 28

// const numbers = 123789;
// const masNumbers = Array.from (String(numbers), Number);

// function onlyEvenNumbers (testMasNumbers) {

// 	const insideMasNumbers = [];
// 	for (const item of testMasNumbers) {
// 		if (item % 2 === 0) {
// 			insideMasNumbers.push(item)
// 		}
// 	}

// 	return Number(insideMasNumbers.join(''))
// }

// console.log (onlyEvenNumbers(masNumbers))

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 2.8

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å –±—É–∫–≤–∞–º–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ –Ω–µ –±–æ–ª–µ–µ –¥–≤—É—Ö –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤.

// const string = 'g g g D D D s s s'

// const masString = string.split(' ')
// function howMenyMainLetters(testmasString) {
// 	let insideMasString = []
// 	for (let i = 0; i < testmasString.length; i+=1){
// 		if (testmasString[i].charAt(0).toUpperCase() === testmasString[i].charAt(0)){
// 			insideMasString.push(testmasString[i])
// 		}
// 	}

// 	if (insideMasString.length - 1 >= 2){
// 		return console.log(`–±–æ–ª—å—à–µ –¥–≤—É—Ö –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤`)
// 	} else {
// 		return console.log(`–º–µ–Ω—å—à–µ –¥–≤—É—Ö –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤`)
// 	}

// }
// 	console.log(howMenyMainLetters(masString))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: '1 22 333 4444 22 5555 1' –£–¥–∞–ª–∏—Ç–µ –∏–∑ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –≤—Å–µ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –±–æ–ª—å—à–µ —Ç—Ä–µ—Ö. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–µ: '1 22 333 22 1'

// const string = '1 22 333 4444 22 5555 1';

// function maxThreeLetterInWords (testString) {
// const insideMasString = testString.split(' ');
// const insideMasString1 = [];
// console.log(insideMasString)
// for (let i = 0; i < insideMasString.length; i+=1) {

// 	if (insideMasString[i].length <= 3) {

// 		insideMasString1.push(insideMasString[i])
// 	}
// }
// return insideMasString1.join(' ')
// }

// console.log(maxThreeLetterInWords(string))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω—ã –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞:let arr1 = [1, 2, 3]; let arr2 = ['a', 'b', 'c']; –°–ª–µ–π—Ç–µ —ç—Ç–∏ –º–∞—Å—Å–∏–≤—ã –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å–ª–µ–¥—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º: [1, 2, 'a', 'b', 'c', 3]

// let arr1 = [1, 2, 3];
// let arr2 = ['a', 'b', 'c'];

// arr1 = [1, 2, ...arr2, 3];

// console.log(arr1)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 2.9

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: 123456 –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É –ø–∞—Ä —Ü–∏—Ñ—Ä —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –∏–º–µ–µ—Ç—Å—è –≤–≤–∏–¥—É —Å–ª–µ–¥—É—é—â–µ–µ: 12 + 34 + 56

// const number = 123456;

// function sumEveryTwo(testNumner) {

// 	const insideNumber = String(testNumner);
// 	const masInsideNumbers = insideNumber.split('');
// 	let insideNumbers = '';

// 	for (let i = 0; i < masInsideNumbers.length; i+=2) {
// 		console.log(Number(masInsideNumbers[i]));
// 		insideNumbers += masInsideNumbers[i] + masInsideNumbers[i+1] + ' ';
// 	}

// 	const insideMasNumbers = insideNumbers.split(' ');
// 	let total = 0;

// 	for (let i = 0; i < insideMasNumbers.length; i+=1){
// 		if (insideMasNumbers[i]){
// 			total+=Number(insideMasNumbers[i]);
// 		}
// 	}

// 	return total
// }

// console.log(sumEveryTwo(number))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏: [1, 2, 3, 4, 5] –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —ç–ª–µ–º–µ–Ω—Ç—ã —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

// const mas = [1, 2, 3, 4, 5]

// for (let i = mas.length - 1; i >= 0; i-=1){
// 	console.log (mas[i])
// }

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 2.10

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å –±—É–∫–≤–∞–º–∏ –∏ —Ü–∏—Ñ—Ä–∞–º–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ –Ω–µ –±–æ–ª–µ–µ —Ç—Ä–µ—Ö –±—É–∫–≤.

// const string = "eh382uu";

// function maxThreeLetter (testString) {
// const testMasString = testString.split('')
// const testEmptyMas = [];
// 	for (let i = 0; i < testMasString.length; i+=1){
// 		if (!Number(testMasString[i])){
// 			testEmptyMas.push(testMasString[i])
// 		}
// 	}

// 	const withoutNumbers = testEmptyMas.join('');
// 	if (withoutNumbers.length <= 3){
// 		return  console.log(`–≤ —Å—Ç—Ä–æ–∫–µ –º–µ–Ω—å—à–µ –∏–ª–∏ 3 –±—É–∫–≤—ã`)
// 	}
// 	return console.log(`–≤ —Å—Ç—Ä–æ–∫–µ –±–æ–ª—å—à–µ —Ç—Ä–µ—Ö –±—É–∫–≤`)
// }

// console.log(maxThreeLetter(string))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–æ —á–∏—Å–ª–æ. –ü–æ–ª—É—á–∏—Ç–µ –ø–µ—Ä–≤—É—é —á–µ—Ç–Ω—É—é —Ü–∏—Ñ—Ä—É —Å –∫–æ–Ω—Ü–∞ —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞.

// const number = 37992463;

// function lastEvenNumber (testNumber) {
// const insideNumber = String(testNumber);
// const insideMas = insideNumber.split('');
// let result = 0;
//  for (let i = insideMas.length - 1; i >= 0; i-=1){
// 	if (Number(insideMas[i])%2 === 0){
// 		result = Number(insideMas[i])
// 		break;
// 	}
//  }
// return result
// }

// console.log(lastEvenNumber(number))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞: 'abcde abcde abcde' –ó–∞–º–µ–Ω–∏—Ç–µ –≤ –Ω–µ–π –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –Ω–∞ '!': '!bcde !bcde !bcde'

// const string = 'abcde abcde abcde';

// function addSumbol (testString){
// 	const insideMas = testString.split(' ')
// 	let insideResultString = '';
// for (let i = 0; i < insideMas.length; i+=1){
// 	insideResultString += '!' + insideMas[i].slice(1) + ' ';
// 	console.log(insideMas[i])
// }
// return insideResultString

// }

// console.log(addSumbol(string))

//#endregion

//#region üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©üß©–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏: [1, 2, 3, 3, 4, 5] –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ —ç—Ç–æ–º –º–∞—Å—Å–∏–≤–µ –µ—Å—Ç—å –¥–≤–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ–¥—Ä—è–¥.

// const mas = [1, 2, 3, 3, 4, 5];

// function findingTheSameNum(testMas){
// let num = 0;
// for (let i = 0; i < testMas.length; i+=1){
// 	if (testMas[i] === testMas[i+1]){
// 		return console.log(`–≤ —ç—Ç–æ–º –º–∞—Å–∏–≤–µ –µ—Å—Ç—å 2 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —á–∏—Å–ª–∞`)
// 	}
// }
// return console.log(`–≤ —ç—Ç–æ–º –º–∞—Å–∏–≤–µ –Ω–µ—Ç 2 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —á–∏—Å–ª–∞`)
// }

// console.log(findingTheSameNum(mas))

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 3.1

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ü–∏—Ñ—Ä—ã —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é.

// const num = 12345;

// function nextNumBiger(testNum) {
// 	const stringNum = String(testNum);
// 	const masNum = stringNum.split('')
// 	let numForResult = 0;

// 	for (let i = masNum.length - 1; i >= 0; i-=1){
// 		if (masNum[i] > masNum[i-1]){
// 			numForResult+= masNum[i]
// 		}
// 	}
// const result = Number(numForResult) + masNum[0]

// if (result.length === masNum.length && masNum[0] < masNum[1]){
// 	return console.log("—Ü–∏—Ñ—Ä—ã —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é")
// }

// return console.log("—Ü–∏—Ñ—Ä—ã —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞ –Ω–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é")
// }

// console.log(nextNumBiger(num))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤[1, '', 2, 3, '', 5] –£–¥–∞–ª–∏—Ç–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –≤—Å–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏.

// const mas = [1, '', 2, 3, '', 5];

// const string = mas.join('')

// const masResult = Array.from(String(string), Number)

// console.log(masResult)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω—ã –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞:let arr1 = [1, 2, 3];let arr2 = [1, 2, 3, 4, 5];–£–¥–∞–ª–∏—Ç–µ –∏–∑ –±–æ–ª—å—à–µ–≥–æ –º–∞—Å—Å–∏–≤–∞ –ª–∏—à–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∫–æ–Ω—Ü–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –¥–ª–∏–Ω—ã –º–∞—Å—Å–∏–≤–æ–≤ —Å—Ç–∞–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏.

// let arr1 = [1, 2, 3];
// let arr2 = [1, 2, 3, 4, 5];

// function theSeymMas(mas1, mas2) {

// if (mas1.length > mas2.length) {

// 	for (let i = 0; i < mas1.length; i+=1){
// 		if (mas1.length > mas2.length) {
// 			mas1.pop()
// 		}
// 	}

// 	return console.log(mas1, mas2)

// } else {

// 	for (let i = 0; i < mas2.length; i+=1){
// 		if (mas2.length > mas1.length) {
// 			mas2.pop()
// 		}
// 	}

// 	return console.log(mas2, mas1)

// }

// }

// console.log(theSeymMas(arr1, arr2))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤:[[2, 1, 4, 3, 5],[3, 5, 2, 4, 1],[4, 3, 1, 5, 2],] –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–∞–∂–¥–æ–º –ø–æ–¥–º–∞—Å—Å–∏–≤–µ.

// const mass = [[2, 1, 4, 3, 5],[3, 5, 2, 4, 1],[4, 3, 1, 5, 2],];

// const [mas1, mas2, mas3] = mass;

// 	mas1.sort((a,b)=> a - b);
// 	mas2.sort((a,b)=> a-b);
// 	mas3.sort((a,b)=>a-b);

// console.log (mass)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 3.2

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —á–∏—Å–ª–∞ –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 10 –¥–æ 1000, —É –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω—è—è —Ü–∏—Ñ—Ä–∞ —á–µ—Ç–Ω–∞—è.

// const min = 10;
// const max = 1000;

// for (let i = min; i <= max; i+=1) {
//     const secondToLastDigit = Math.floor(i / 10);
//     if (secondToLastDigit % 2 === 0) {
//         console.log(i);
//     }
// }

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤. –£–¥–∞–ª–∏—Ç–µ –∏–∑ –Ω–µ–≥–æ –∫–∞–∂–¥—ã–π –ø—è—Ç—ã–π —ç–ª–µ–º–µ–Ω—Ç.

// const mas = [1,2,3,4,5,6,7,8,9,10,11];

// function deleteEveryFive (testMas) {
// 	const insideMas = [];
// 	for (let i = 1; i < testMas.length; i+=1){
// 		if (i % 5 !== 0){
// 			insideMas.push(testMas[i-1])
// 		}
// 	}
// 	return insideMas;
// }

// console.log(deleteEveryFive(mas))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å —á–∏—Å–ª–æ–º:let num = 5;–°–¥–µ–ª–∞–π—Ç–µ —Å—Ç—Ä–æ–∫—É, —Å–æ–¥–µ—Ä–∂–∞—â—É—é —Å—Ç–æ–ª—å–∫–æ –Ω—É–ª–µ–π, —Å–∫–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –ø–æ–ª—É—á–∏—Ç—Å—è —Ç–∞–∫–∞—è —Å—Ç—Ä–æ–∫–∞: '00000'

// const num = 5;

// function letMakeZero(testNum) {
// const mas = [];

// 	for(let i = 0; i<testNum; i+=1){
// 		mas.push(0)
// 	}

// return mas.join('')
// }

// console.log(letMakeZero(num))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ —Å–ª–æ–≤–∞–º–∏:'aaa bbb ccc eee fff'–£–¥–∞–ª–∏—Ç–µ –∏–∑ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –∫–∞–∂–¥–æ–µ –≤—Ç–æ—Ä–æ–µ —Å–ª–æ–≤–æ. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–µ:'aaa ccc fff'

// const string = 'aaa bbb ccc eee fff';

// function deleteEveryTwoWord(testString) {

// 	const insideMas = testString.split(' ');
// 	const insideResultMas = [];

// 	for (let i = 0; i < insideMas.length; i+=2){
// 		insideResultMas.push(insideMas[i])
// 	}

// 	return insideResultMas.join(' ')

// }

// console.log(deleteEveryTwoWord(string))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤:[[1, 2, 3],[4, 5, 6],[7, 8, 9]],]–ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.

// const multyMas = [[1, 2, 3],[4, 5, 6],[7, 8, 9]]
// const [a,b,c] = multyMas;

// function sumFromMultyMas (a,b,c) {

// 	let total = 0;

// 	for (let i = 0; i < a.length; i+=1){
// 		total+=a[i]
// 	}

// 	for (let i = 0; i < b.length; i+=1){
// 		total+=b[i]
// 	}

// 	for (let i = 0; i < c.length; i+=1){
// 		total+=c[i]
// 	}

// return total

// }

// console.log(sumFromMultyMas(a,b,c))

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 3.3

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å–æ —Å–ª–æ–≤–∞–º–∏. –£–¥–∞–ª–∏—Ç–µ –∏–∑ –Ω–µ–≥–æ —Å–ª–æ–≤–∞, —Å–æ—Å—Ç–æ—è—â–∏–µ –±–æ–ª–µ–µ —á–µ–º –∏–∑ —Ç—Ä–µ—Ö —Å–∏–º–≤–æ–ª–æ–≤.

// const mas = ['q', 'sdf', 'sd', 'sddd', 'sd', 'asass'];

// function deleteMoreFiveLeters(testMas) {
// 	 const insideMas = [];
// 	 for (const item of testMas){
// 		if (item.length <= 3){
// 			insideMas.push(item);
// 		}
// 	 }
// 	 return insideMas;
// }

// console.table (deleteMoreFiveLeters(mas));

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: 1357 –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ —Ü–∏—Ñ—Ä—ã —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞ —è–≤–ª—è—é—Ç—Å—è –Ω–µ—á–µ—Ç–Ω—ã–º–∏.

// const num = 1357;

// function notEvenNumbers(testNum){
// const insideString = String(testNum);
// let insidetestString = '';

// for (let i = 0; i < insideString.length; i+=1){
// 	if (Number(insideString[i]) % 2 !== 0) {
// 		insidetestString += insideString[i]
// 	}
// }

// let text= '';

// if (insideString.length === insidetestString.length){
// 	text = console.log(`–í—Å–µ —Ü–∏—Ñ—Ä—ã —á–µ—Ç–Ω—ã–µ`)
// } else {
// 	console.log(`–ù–µ –≤—Å–µ —Ü–∏—Ñ—Ä—ã —á–µ—Ç–Ω—ã–µ`)
// }

// return insidetestString
// }

// console.log(notEvenNumbers(num))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —Å–ª–æ–≤–æ: 'abcba' –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —ç—Ç–æ —Å–ª–æ–≤–æ —á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Å –ª—é–±–æ–π —Å—Ç–æ—Ä–æ–Ω—ã.

// const string = 'abcba';

// function seymOrNo(testString){
// const insideMas1 = [];
// const insideMas2 = [];
// const insideMas = testString.split('');

// for (let i = 0; i < insideMas.length; i+=1){
// 	insideMas1.push(insideMas[i])
// }

// for (let i = insideMas.length - 1; i >= 0; i-=1){
// 	insideMas2.push(insideMas[i])
// }

// const stringResult1 = insideMas1.join('');
// const stringResult2 = insideMas2.join('');

// let message = '';
// if (stringResult1 === stringResult2){
// 	message = '—á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Å –ª—é–±–æ–π —Å—Ç–æ—Ä–æ–Ω—ã'
// } else {
// 	message = '–Ω–µ —á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ —Å –ª—é–±–æ–π —Å—Ç–æ—Ä–æ–Ω—ã'
// }

// return console.log (message)
// }

// console.log(seymOrNo(string))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤:[[[11, 12, 13],[14, 15, 16],[17, 17, 19],],[[21, 22, 23],[24, 25, 26],[27, 27, 29],],[[31, 32, 33],[34, 35, 36],[37, 37, 39],],]–ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.

// const multyMas = [[[11, 12, 13],[14, 15, 16],[17, 17, 19],],[[21, 22, 23],[24, 25, 26],[27, 27, 29],],[[31, 32, 33],[34, 35, 36],[37, 37, 39]]];

// function sumFromBigArr(testMas){
// const [a, b, c] = testMas;
// const mas = []

// for (const item of a){
// 	mas.push(...item)
// }
// for (const item of b){
// 	mas.push(...item)
// }
// for (const item of c){
// 	mas.push(...item)
// }

// let total = 0;

// for (let i = 0; i < mas.length; i+=1){
// 	total+=mas[i]
// }

// return total
// }

// console.log(sumFromBigArr(multyMas))

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 3.4

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ —á–∏—Å–ª–∞ –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 10 –¥–æ 1000, —É –∫–æ—Ç–æ—Ä—ã—Ö –ø–µ—Ä–≤–∞—è —Ü–∏—Ñ—Ä–∞ —á–µ—Ç–Ω–∞—è.

// for (let i = 10; i <= 1000; i++) {
//     const firstDigit = Math.floor(i / 100); // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é —Ü–∏—Ñ—Ä—É —á–∏—Å–ª–∞
//     if (firstDigit % 2 === 0) {
//         console.log(i);
//     }
// }

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –º–∞—Å—Å–∏–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫–æ–π:[1, 2, 3, 4, 5, 6]–ü–æ–º–µ–Ω—è–π—Ç–µ –º–µ—Å—Ç–∞–º–∏ –ø–∞—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞:[2, 1, 4, 3, 6, 5]‚ùì‚ùì‚ùì

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω —Å–ª–µ–¥—É—é—â–∏–π –æ–±—ä–µ–∫—Ç:let obj = {1: {1: 11,2: 12,3: 13,},2: {1: 21,2: 22,3: 23,},3: {1: 24,2: 25,3: 26,},} –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.

// let obj = {
//     1: {1: 11, 2: 12, 3: 13},
//     2: {1: 21, 2: 22, 3: 23},
//     3: {1: 24, 2: 25, 3: 26}
// };

// let sum = 0;

// for (let key1 in obj){
// 	for (let key2 in obj[key1]){
// 		sum += obj[key1][key2]
// 	}
// }

// console.log(`–°—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –æ–±—ä–µ–∫—Ç–∞: ${sum}`);

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 3.5

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω —Ç–µ–∫—Å—Ç —Å–æ —Å–ª–æ–≤–∞–º–∏. –ó–∞–ø–∏—à–∏—Ç–µ –≤ –º–∞—Å—Å–∏–≤ –≤—Å–µ —Å–ª–æ–≤–∞, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è –Ω–∞ –±—É–∫–≤—É 'a'.

// const string = 'sds ass sfs asss'

// function takeWorldsWithFistA(testString){
// const insideMas = testString.split(' ');
// const testEmptyMas = [];
// for (let i = 0; i < insideMas.length; i+=1){
// 	if (insideMas[i].charAt(0) === 'a'){
// 		testEmptyMas.push(insideMas[i])
// 	}
// }
// return testEmptyMas;
// }

// console.log(takeWorldsWithFistA(string))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏. –û—Å—Ç–∞–≤—å—Ç–µ –≤ –Ω–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª—è—Ç—Å—è –Ω–∞ 5.

// const mas = [2, 5, 10, 11, 44, 50];

// function numbersDivideOnFive (testMas) {
// 	const insideMas = [];
// 	for (let i = 0; i < testMas.length; i+=1){
// 		if (testMas[i] % 5 === 0) {
// 			insideMas.push(testMas[i])
// 		}
// 	}
// 	return insideMas;
// }

// console.log(numbersDivideOnFive(mas))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω —Å–ª–µ–¥—É—é—â–∏–π –æ–±—ä–µ–∫—Ç: under :) –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞.

// let obj1 = {
// 	1: {
// 		1: {
// 			1: 111,
// 			2: 112,
// 			3: 113,
// 		},
// 		2: {
// 			1: 121,
// 			2: 122,
// 			3: 123,
// 		},
// 	},
// 	2: {
// 		1: {
// 			1: 211,
// 			2: 212,
// 			3: 213,
// 		},
// 		2: {
// 			1: 221,
// 			2: 222,
// 			3: 223,
// 		},
// 	},
// 	3: {
// 		1: {
// 			1: 311,
// 			2: 312,
// 			3: 313,
// 		},
// 		2: {
// 			1: 321,
// 			2: 322,
// 			3: 323,
// 		},
// 	},
// }

// let total = 0;

// for (let key in obj1){
// 	for(let key1 in obj1[key]){
// 		for (let key2 in obj1[key][key1]){
// 			total += obj1[key][key1][key2]
// 		}
// 	}
// }

// console.log(total)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏. –û—Å—Ç–∞–≤—å—Ç–µ –≤ –Ω–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ü–∏—Ñ—Ä—É –Ω–æ–ª—å.

// const numbers = [10, 25, 304, 42, 7, 100, 890, 12345];

// const numbersWithZero = numbers.filter(number => number.toString().includes('0'));
// console.log(`–ß–∏—Å–ª–∞ —Å —Ü–∏—Ñ—Ä–æ–π 0: ${numbersWithZero}`);

// const numbersWithOne = numbers.filter(number => number.toString().includes('1'));
// console.log(numbersWithOne)

// const numbersWithFIve = numbers.filter(number => number.toString().includes('5'));
// console.log(numbersWithFIve)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å–æ —á–∏—Å–ª–∞–º–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ –Ω–µ–º –µ—Å—Ç—å —á–∏—Å–ª–æ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ –≤ —Å–µ–±–µ —Ü–∏—Ñ—Ä—É 3.

// const mas = [2,4,67,89,9,0,2,3];

// const findThree = mas.find(item => item.toString().includes('3'));

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: 35142 –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Ü–∏—Ñ—Ä—ã —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –¥–æ–ª–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è —Å–ª–µ–¥—É—é—â–µ–µ:12345

// const number = 35142;

// const numArr = Array.from(String(number), Number);

// const numAfterSort = numArr.sort((a, b) => a - b )

// console.log(Number(numAfterSort.join('')))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É: '-1-2-3-4-5-'

// let mas = [];

// for (let i = 1; i<=5; i+=1){
// 	mas.push(i)
// }

// const string = '-' + mas.join('-') + '-';

// console.log(string);

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 3.6

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å–æ —á–∏—Å–ª–∞–º–∏. –£–¥–∞–ª–∏—Ç–µ –∏–∑ –Ω–µ–≥–æ —á–∏—Å–ª–∞, —Å–æ—Å—Ç–æ—è—â–∏–µ –±–æ–ª–µ–µ —á–µ–º –∏–∑ —Ç—Ä–µ—Ö —Ü–∏—Ñ—Ä

// const mas = [23333,4,6733,89,9,2333,3];

// const newMas = mas.filter((item) => {
// 	if (item.toString().length < 3) {
// 		return item
// 	}
// })

// console.log(newMas)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–æ —á–∏—Å–ª–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫–æ–µ: let num = 12345; –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ —Ü–∏—Ñ—Ä—ã —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞ –±–æ–ª—å—à–µ –Ω—É–ª—è.

// const num = 12345;

// const numArr = Array.from(String(num), Number);

// const ckeckNum = numArr.every((item)=> {
// 	if (item > 0){
// 		return item
// 	}
// })
// console.log (ckeckNum)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –Ω–µ–∫–æ—Ç–æ—Ä—ã–π –º–∞—Å—Å–∏–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤–æ—Ç —Ç–∞–∫–æ–π:[123, 456, 789]–°–ª–µ–π—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –≤ –æ–¥–∏–Ω –º–∞—Å—Å–∏–≤, —Ä–∞–∑–±–∏–≤ –∏—Ö –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ: [1, 2, 3, 4, 5, 6, 7, 8, 9]

// const mas = [123, 456, 789];

// const num = Number(mas.join(''));

// const newMas = Array.from(String(num), Number)

// console.log(newMas)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: (under) –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.

// let data = [
// 	{
// 		1: 11,
// 		2: 12,
// 		3: 13,
// 	},
// 	{
// 		1: 21,
// 		2: 22,
// 		3: 23,
// 	},
// 	{
// 		1: 24,
// 		2: 25,
// 		3: 26,
// 	},
// ];

// let total = 0;

// for (let key in data){
// 	for (let key1 in data[key]){
// 		total+=data[key][key1]
// 	}
// }

// console.log(total)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 3.7

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ —Å–æ —Å–ª–æ–≤–∞–º–∏. –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Å–ª–æ–≤–∞ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

// const string = 'aaa mmm eee lll rrr bbb';

// const stringMas = string.split(' ');

// const stringFromAtoB = stringMas.sort((a, b) => a.localeCompare(b));

// console.log (stringFromAtoB.join(' '));

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–æ —á–∏—Å–ª–æ. –ü–æ–ª—É—á–∏—Ç–µ –º–∞—Å—Å–∏–≤ –¥–µ–ª–∏—Ç–µ–ª–µ–π —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞.

// const num = 3;

// const mas = []

// for (let i = 1; i <= 30; i+=1){
// 	if (i % num === 0){
// 		mas.push(i)
// 	}
// }

// console.log(mas)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω—ã –¥–≤–∞ —á–∏—Å–ª–∞. –ü–æ–ª—É—á–∏—Ç–µ –º–∞—Å—Å–∏–≤ –æ–±—â–∏—Ö –¥–µ–ª–∏—Ç–µ–ª–µ–π —ç—Ç–∏—Ö —á–∏—Å–µ–ª.

// const num1 = 3;
// const num2 = 2;
// const mas = [];

// for (let i = 1; i <= 30; i+=1){
// 	if (!(i % num1) && !(i % num2)){
// 		mas.push(i)
// 	}
// }

// console.log(mas)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–ß–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –Ω–∞–ø–∏—Å–∞–Ω—ã —á–∏—Å–ª–∞. –ü–æ–ª—É—á–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∏–∑ —ç—Ç–∏—Ö —á–∏—Å–µ–ª.

// const numbers = [2, 4, 6, 7, 6, 4]

// const maxNumber = Math.max(...numbers);

// console.log(maxNumber)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏. –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ –≤—Å—Ç–∞–≤—å—Ç–µ –µ—â–µ —Ç–∞–∫–æ–µ –∂–µ.

// const numbers = [2, 42, 6, 73, 6, 44]

// const newMas = [];

// for (let i = 0; i < numbers.length; i+=1){
// 	if (numbers[i] <= 9){
// 		newMas.push(numbers[i])
// 		newMas.push(numbers[i])
// 	} else {
// 		newMas.push(numbers[i])
// 	}
// }

// console.log(newMas)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞. –£–¥–∞–ª–∏—Ç–µ –∏–∑ –Ω–µ–µ –≤—Å–µ –≥–ª–∞—Å–Ω—ã–µ –±—É–∫–≤—ã.

//1
// const string = 'hello world';

// function deleteLetters (testString){
// const insideArr = string.split('');
// const resArr = []
// const result = insideArr.filter( item => item !== 'a' && item !== 'e' && item !== 'i' && item !== 'o' && item !== 'u')
// return result.join('')
// }

// console.log(deleteLetters(string))

//2
// const string = 'hello world'

// function letters (testSt){

// let insideString = '';

// for (let i = 0; i < testSt.length; i+=1){
// 	if (testSt[i] !== 'a' && testSt[i] !== 'e' && testSt[i] !== 'o' && testSt[i] !== 'i' ){
// 		insideString += testSt[i]
// 	}
// }
// return insideString
// }

// console.log(letters(string))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞. –°–¥–µ–ª–∞–π—Ç–µ –∑–∞–≥–ª–∞–≤–Ω–æ–π –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ.

// const inputStrin = "–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞. –°–¥–µ–ª–∞–π—Ç–µ –∑–∞–≥–ª–∞–≤–Ω–æ–π –ø–æ—Å–ª–µ–¥–Ω—é—é –±—É–∫–≤—É –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ.";

// const string = inputStrin.split(' ');

// const resultSt = string.map((item)=> {
// 	const lastLetter = item[item.length -1];
// 	const lastLetterResult = lastLetter.toUpperCase()
// 	return item.slice(0, -1) + lastLetterResult
// }).join(' ')

// console.log(resultSt)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: (under) –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.

// let data = [
// 	{
// 		1: [1, 2, 3],
// 		2: [1, 2, 3],
// 		3: [1, 2, 3],
// 	},
// 	{
// 		1: [1, 2, 3],
// 		2: [1, 2, 3],
// 		3: [1, 2, 3],
// 	},
// 	{
// 		1: [1, 2, 3],
// 		2: [1, 2, 3],
// 		3: [1, 2, 3],
// 	},
// ];

// let total = 0;

// for (let key in data){
// 	for(let key1 in data[key]){
// 		for (let key2 in data[key][key1]){
// 			total += data[key][key1][key2]
// 		}
// 	}
// }

// console.log(total)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 3.8

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å–æ —á–∏—Å–ª–∞–º–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ —á–∏—Å–ª–∞ –∏–∑ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç –≤ —Å–µ–±–µ —Ü–∏—Ñ—Ä—É 3.

// const mas = [23333,43,6733,839,93,2333,3];

// const result = mas.every(item => {
// 	return item.toString().includes('3')
// })

// console.log(result)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 'kebab-case' –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ–µ –≤ —Ñ–æ—Ä–º–∞—Ç: 'snake_case'

// const string = 'kebab-case';

// const stringNew = string.split('-').join('_')

// console.log(stringNew)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ‚≠ê‚≠ê‚≠ê–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ'snake_case'–ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ –µ–µ –≤ —Ñ–æ—Ä–º–∞—Ç:'camelCase'

// const string = 'snake_case';
// const insideMas = string.split('_');

// function newView (testSt) {
// 	const newMas = [];
// 	newMas.push(testSt[0] = 'camel');
// 	newMas.push(testSt[1].charAt(0).toUpperCase() + testSt[1].slice(1))

// 	return newMas.join('')
// }

// console.log(newView(insideMas))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ‚≠ê‚≠ê‚≠ê–°—Ñ–æ—Ä–º–∏—Ä—É–π—Ç–µ —Å –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–æ–≤ —Å–ª–µ–¥—É—é—â–∏–π –º–∞—Å—Å–∏–≤:[[1, 2, 3],[1, 2, 3],[1, 2, 3],[1, 2, 3],[1, 2, 3],]

// const mainMas = [];

// const insideMas = [];

// for (let i = 1; i <= 3; i+=1){
// 	insideMas.push(i)
// }

// for (let i = 0; i < 3; i+=1){
// 	mainMas.push(insideMas)
// }

// console.log(mainMas)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 3.9

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ‚≠ê‚≠ê‚≠ê‚≠ê(–î–û–ü)‚ùï‚ùï‚ùï –¥–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –≤—ã–≤–µ—Å—Ç–∏ –≤ –æ–±—å–µ–∫—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–∫–≤ –∏ —Å–∞–º—É –±—É–∫–≤—É –∫–∞–∫ –∫–ª—é—á

// //1
// const srt = 'djlbnldfnbeenbelnbwenllwdnvlwdvnwejewbjbejwbejbvwbvwlvuevweehcbjwhcvjhvwemcevhwhcvewchwevcehw';

// const st = 'djcksivkdksvwbdldslljviuwuskkgiDBIsdkjabsdkuhwiuskbsdiag iuwKK wbvjkwVWjvhVJWdhbciqb'
// //1
// const newOb = st.split('').reduce((acc, item)=>{acc.hasOwnProperty(item) ? acc[item] += 1 : acc[item] = 1; return acc},{})
// //2
// const newOb1 = st.split('').reduce((acc, item)=>{item in acc ? acc[item] += 1 : acc[item] = 1; return acc},{})
// //3
// const newOb3 = st.split('').reduce((acc, item)=>{Object.keys(acc).includes(item) ? acc[item] += 1 : acc[item] = 1; return acc},{})

// console.table(newOb)
// console.table(newOb1)
// console.table(newOb3)

// //2
// const string1111 = 'nwoinoewcmweocmoewimcweoicmewichewfojewfowejfpapejajmciojcneicineciecniecneincie';
// const insideMas11 = string1111.split('');

// function takeStrToObj(items){

// return items.reduce((acc, item)=>{
// 	if (acc.hasOwnProperty(item)){
// 		acc[item]+=1
// 	}else{
// 		acc[item] = 1
// 	}
// 	return acc
// },{})
// }

// console.log(takeStrToObj(insideMas11))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ‚≠ê‚≠ê‚≠ê(–î–û–ü)‚ùï‚ùï‚ùï –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å

// const mas = ['js', 'html', 'css', 'js']

// const result = mas.filter((item, inx, arr)=> arr.indexOf(item) === inx)

// console.log(result)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä.

// const string = '1203791037';

// const arrString = string.split('')

// const checking = arrString.every(item => Number(item) || item === '0');

// console.log(checking)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ‚≠ê‚≠ê‚≠ê–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å–æ —á–∏—Å–ª–∞–º–∏. –£–¥–∞–ª–∏—Ç–µ –∏–∑ –Ω–µ–≥–æ —á–∏—Å–ª–∞, –∏–º–µ—é—â–∏–µ –¥–≤–∞ –∏ –±–æ–ª–µ–µ –Ω—É–ª—è.

// const arr = [223, 100, 1000, 4304, 44, 4]

// function delZero (items){
// return items.reduce((acc, item) => { !(item.toString().includes('00')) ? acc.push(item) : acc; return acc}, [])
// }

// console.log(delZero(arr))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ‚≠ê‚≠ê‚≠ê–ù–∞–π–¥–∏—Ç–µ –≤—Å–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 1000, —Å—É–º–º–∞ —Ü–∏—Ñ—Ä –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–≤–Ω–∞ 13.

// const resultArr = [];

// for (let i = 0; i <= 1000; i+=1){
// 	let firstNum = Math.floor(i / 100);
// 	let secondNum = Math.floor (i / 10)%10;
// 	let lastNum = Number(String(i).slice(-1));

// 	if (firstNum + secondNum + lastNum === 13){
// 		resultArr.push(i)
// 	}
// }

// console.log(resultArr)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 3.10

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤. –°–¥–µ–ª–∞–π—Ç–µ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –Ω–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø–æ–≤—Ç–æ—Ä–∏–ª—Å—è –¥–≤–∞ —Ä–∞–∑–∞.

// const startArr = ['22', 10, true, [1,2,3], 5, 'string']

// function dubleElements (items) {
// 	const resultArr = [];

// 	for (let i = 0; i < items.length; i+=1){
// 		resultArr.push(items[i])
// 		resultArr.push(items[i])
// 	}

// 	return resultArr
// }

// console.log(dubleElements(startArr))

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤ –∏ —á–∏—Å–ª–æ. –û—Å—Ç–∞–≤—å—Ç–µ –≤ –º–∞—Å—Å–∏–≤–µ —Ç–æ–ª—å–∫–æ —Ç–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ —è–≤–ª—è—é—Ç—Å—è –¥–µ–ª–∏—Ç–µ–ª—è–º–∏ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞.

// const arr = [2,3,4,5,6,7,8,9]

// const num = 3;

// const filterNumbers = items => items.filter((item) => !(item % num))

// console.log(filterNumbers(arr));

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ‚≠ê‚≠ê‚≠ê‚≠ê–î–∞–Ω—ã –¥–≤–∞ —á–∏—Å–ª–∞. –ü–æ–ª—É—á–∏—Ç–µ –º–∞—Å—Å–∏–≤ —Ü–∏—Ñ—Ä, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –∏ –≤ –æ–¥–Ω–æ–º, –∏ –≤–æ –≤—Ç–æ—Ä–æ–º —á–∏—Å–ª–µ.

// const number1222 = 12445;
// const number2222 = 54321;

// function getCommonDigits(num1, num2) {
//     const digits1 = Array.from(String(num1), Number);
//     const digits2 = Array.from(String(num2), Number);

//     const commonDigits = digits1.filter(digit => digits2.includes(digit));

//     return commonDigits;
// }

// const commonDigitsArray = getCommonDigits(number1222, number2222);

// console.log(`–û–±—â–∏–µ —Ü–∏—Ñ—Ä—ã –≤ —á–∏—Å–ª–∞—Ö ${number1222} –∏ ${number2222}: ${commonDigitsArray}`);

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω–æ —á–∏—Å–ª–æ. –ü–æ–ª—É—á–∏—Ç–µ –º–∞—Å—Å–∏–≤ –ø–æ–∑–∏—Ü–∏–µ–π –≤—Å–µ—Ö —Ü–∏—Ñ—Ä 3 –≤ —ç—Ç–æ–º —á–∏—Å–ª–µ, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º –ø–µ—Ä–≤–æ–π –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π.

// const num = 384312130;

// const arr = Array.from(String(num), Number)

// const newMas = []
// for (let i = 1; i < arr.length - 1; i+=1){
// 	if (arr[i] === 3){
// 		newMas.push(i+1)
// 	}
// }

// console.log(newMas)

//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤ —Å–æ —á–∏—Å–ª–∞–º–∏. –û—Å—Ç–∞–≤—å—Ç–µ –≤ –Ω–µ–º —á–∏—Å–ª–∞, —Å–æ—Å—Ç–æ—è—â–∏–µ –∏–∑ —Ä–∞–∑–Ω—ã—Ö —Ü–∏—Ñ—Ä, –∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —É–¥–∞–ª–∏—Ç–µ. ‚ùì‚ùì‚ùì

// const mas = [222,33,5,76,12,4]
// const news = []
// for (let i = 0; i < mas.length; i+=1){
// 	let masInside = Array.from(String(mas[i]), Number);
// 	let masRes = masInside.filter(item =>  )
// 	console.log(masRes)
// }
//#endregion

//#region üöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄüöÄ–î–∞–Ω –º–∞—Å—Å–∏–≤:(under) –°–ª–µ–π—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –≤ –æ–¥–∏–Ω –æ–¥–Ω–æ–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤:

// const mas = [
// 	[1, 2, 3],
// 	[4, 5, 6],
// 	[7, 8, 9],
// ];

// const resMas = mas.flatMap(item => item)

// console.log(resMas)

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 4.1

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–µ—Ä–Ω–µ—Ç —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ —Å–ª–æ–≤–æ–º.‚ùì‚ùì‚ùì

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–∞—Ç—É, –∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ —Å–ª–æ–≤–æ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —ç—Ç–æ–π –¥–∞—Ç–µ.‚ùì‚ùì‚ùì

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–µ–∫—É–Ω–¥—ã, –∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É—Ç–æ–∫, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —ç—Ç–∏–º —Å–µ–∫—É–Ω–¥–∞–º.‚ùì‚ùì‚ùì

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —á–∏—Å–ª–æ –∏ —Å—Ç—Ä–æ–∫—É –∏ –æ–±—Ä–µ–∑–∞—Ç—å —ç—Ç—É —Å—Ç—Ä–æ–∫—É –¥–æ –¥–ª–∏–Ω—ã, –∑–∞–¥–∞–Ω–Ω–æ–π –ø–µ—Ä–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º.

// const string = 'hello world'

// const cat = 5;

// function catString(testString, testCat){
// const insideArr = []
// const insideString = testString.split('');

// for (let i = 0; i < testCat; i+=1){
// 	insideArr.push(testString[i]);
// }

// return insideArr.join('')

// }

// console.log(catString(string, cat))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å –¥–∞—Ç—É, –∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —ç—Ç–æ–π –¥–∞—Ç–µ.‚ùì‚ùì‚ùì

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —á–∏—Å–ª–æ, –∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—É–º–º—É –µ–≥–æ –¥–µ–ª–∏—Ç–µ–ª–µ–π.‚ùì‚ùì‚ùì

//todo –£—Ä–æ–≤–µ–Ω—å 4.2

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —á–∏—Å–ª–æ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—É–º–º—É –µ–≥–æ —Ü–∏—Ñ—Ä.

// const num = 23493;

// function totalNumbersFromNum (testNum) {
// const insideNum = Array.from(String(num), Number);
// const result = insideNum.reduce((acc, item) => acc += item, 0)
// return result
// }

// console.log(totalNumbersFromNum(num))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —á–∏—Å–ª–æ –∏ —É–¥–∞–ª—è—Ç—å –∏–∑ –Ω–µ–≥–æ –Ω—É–ª–∏.

// const num = 2310320300123;

// function deleteZero (insideNum) {
// const insideArr = Array.from(String(insideNum), Number);
// const result = insideArr.filter( item => item !== 0)
// return Number(result.join(''))
// }

// console.log(deleteZero(num))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –ø—Ä–æ—à–ª–æ –∏–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –∑–∞–¥–∞–Ω–Ω–æ–π –¥–∞—Ç—ã –≤ –≥–æ–¥—É, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–æ–≥–æ, –±—ã–ª–∞ —É–∂–µ —ç—Ç–∞ –¥–∞—Ç–∞ –∏–ª–∏ –Ω–µ—Ç.‚ùì‚ùì‚ùì

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –≥–æ–¥ –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π –æ–Ω –∏–ª–∏ –Ω–µ—Ç.‚ùì‚ùì‚ùì

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–µ—Ä–Ω–µ—Ç –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –≤–∏—Å–æ–∫–æ—Å–Ω—ã—Ö –≥–æ–¥–æ–≤ –∑–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å—Ç–æ –ª–µ—Ç.‚ùì‚ùì‚ùì

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –∫–æ–Ω—Ü–∞ —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞.‚ùì‚ùì‚ùì

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤–µ—Ä–Ω–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏–π, —Ç–µ–∫—É—â–∏–π –∏ —Å–ª–µ–¥—É—é—â–∏–π –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ —Å–ª–æ–≤–æ–º –≤ –≤–∏–¥–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞:{next: '–ø–Ω',curr: '–≤—Å',prev: '—Å–±',}‚ùì‚ùì‚ùì

//todo –£—Ä–æ–≤–µ–Ω—å 4.3

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®‚≠ê‚≠ê‚≠ê–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏ —É–¥–∞–ª—è—Ç—å –∏–∑ –Ω–µ–≥–æ –≤—Å–µ –¥—É–±–ª–∏.

// const arrey = [2, 3, 4, 5, 3, 6, 1, 2, 4]

// const delDubl = items => items.filter((item, inx) => items.indexOf(item) === inx)

// console.log(delDubl(arrey))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏ —É–¥–∞–ª—è—Ç—å –∏–∑ –Ω–µ–≥–æ –≤—Å–µ –¥—É–±–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –±–æ–ª—å—à–µ —Ç—Ä–µ—Ö —Ä–∞–∑.‚ùì‚ùì‚ùì

// const arrey = [2, 2, 3, 4, 5, 3, 6, 1, 2, 4]

// const delDubl = items => items.filter((item, inx) => items.indexOf(item) === inx)

// console.log(delDubl(arrey))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®‚≠ê‚≠ê‚≠ê–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏ —É–¥–∞–ª—è—Ç—å –∏–∑ –Ω–µ–≥–æ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ, —Ä—è–¥–æ–º —Å—Ç–æ—è—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã.

// const arrey = [2, 3, 5, 4, 5, 3, 6,6, 1,1, 2, 4];

// function delElements (items) {
// 	const insideArr = [];
// 	for(let i = 0; i < items.length; i+=1){
// 		if (items[i] !== items[i+1] && items[i] !== items[i-1]){
// 			insideArr.push(items[i])
// 		}
// 	}
// 	return insideArr
// }

// console.log(delElements(arrey))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®‚≠ê‚≠ê‚≠ê–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –≤ –≤–∏–¥–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞: {max: 9,min: 1,}

// const mas = [2,4,5,7,8,23,43,66,3];

// function maxAndMinNum(testMas){
// const numMin = Math.min(...testMas);
// const numMax = Math.max(...testMas);

// const obj = {}

// const min = 'min';
// const max = 'max';

// obj[min] = numMin;
// obj[max] = numMax;

// return obj
// }

// console.log(maxAndMinNum(mas))

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 4.4

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —á–∏—Å–ª–æ, –∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–≥–æ –¥–µ–ª–∏—Ç–µ–ª–µ–π.

// const num = 10;

// function howManyDivideInNum(testNum){
// const resMas = [];

// for(let i = 1; i <= testNum; i+=1){
// 	if (testNum % i === 0){
// 		resMas.push(i)
// 	}
// }
// return resMas.length
// }

// console.log(howManyDivideInNum(num))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–∞—Ç—É, –∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∑–Ω–∞–∫ –∑–æ–¥–∏–∞–∫–∞, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —ç—Ç–æ–π –¥–∞—Ç–µ.‚ùì‚ùì‚ùì

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —á–∏—Å–ª–æ, –∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤ –µ–≥–æ –¥–µ–ª–∏—Ç–µ–ª–µ–π.

// const num = 10;

// function howManyDivideInNum(testNum){
// const resMas = [];

// for(let i = 1; i <= testNum; i+=1){
// 	if (testNum % i === 0){
// 		resMas.push(i)
// 	}
// }
// return resMas
// }

// console.log(howManyDivideInNum(num))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®‚≠ê‚≠ê‚≠ê–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —á–∏—Å–ª–æ –∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –ø—Ä–æ—Å—Ç–æ–µ –æ–Ω–æ –∏–ª–∏ –Ω–µ—Ç.

// const num = 8;

// function howManyDivideInNum(testNum){
// const resMas = [];

// for(let i = 1; i <= testNum; i+=1){
// 	if (testNum % i === 0){
// 		resMas.push(i)
// 	}
// }
// let message = '';

// if (resMas.length > 2){
// 	message = `–ß–∏—Å–ª–æ ${testNum} –Ω–µ –ø—Ä–æ—Å—Ç–æ–µ`
// }else {
// 	message = `–ß–∏—Å–ª–æ ${testNum} –ø—Ä–æ—Å—Ç–æ–µ`
// }
// return message
// }

// console.log(howManyDivideInNum(num))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —á–∏—Å–ª–æ –∏ —É–¥–∞–ª—è—Ç—å –∏–∑ –Ω–µ–≥–æ —á–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã.

// const num = 33;

// function evenMas(testNum){

// const resMas = [];
// const result = []

// for(let i = 1; i <= testNum; i+=1){
// 		resMas.push(i)
// }

// for (const item of resMas){
// 	if (item % 2 === 0){
// 		result.push(item)
// 	}
// }

// return result
// }

// console.log(evenMas(num))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–ª–Ω–∏—Ç –º–∞—Å—Å–∏–≤ N —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞.

// const min = 1;
// const max = 100;

// function randomNumbersInArr (min, max) {
// const result = [];

// for (let i = min; i <= max; i+=1){
// 	result.push(Math.round(Math.random()*(max - min)+ min))
// }

// return result
// }

// console.log(randomNumbersInArr(min, max))

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 4.5

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–î–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–æ —Å—Ç—Ä–æ–∫–æ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —á–∏—Å–ª–æ, —Ç–æ –µ—Å—Ç—å —Å–æ—Å—Ç–æ–∏—Ç —Ç–æ–ª—å–∫–æ –∏–∑ —Ü–∏—Ñ—Ä.

// const string = '728682374'

// function whatIsThisNumbersOrNo (testString) {
// 	const insideString = testString.split('');
// 	const result = [];

// 	for(let i = 0; i < insideString.length; i+=1){
// 		if (Number(insideString[i])){
// 			result.push(insideString[i])
// 		}
// 	}
// 	let message = '';
// 	if (insideString.length === result.length){
// 		message = `–°—Ç—Ä–æ–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Ü–∏—Ñ—Ä`
// 	} else {
// 		message = `–°—Ç—Ä–æ–∫–∞ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Ü–∏—Ñ—Ä`
// 	}

// 	return message;
// }

// console.log(whatIsThisNumbersOrNo(string))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®‚≠ê‚≠ê‚≠ê–î–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Å–æ —Å—Ç—Ä–æ–∫–æ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤ —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –¥—Ä–æ–±—å. /‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è//PATTERN//üß±üß±üß±üß±/

// function isFraction(str) {
//     const fractionPattern = /^\d+\/\d+$/;
//     return fractionPattern.test(str);
// }

// const testString = "58";
// console.log(`–°—Ç—Ä–æ–∫–∞ "${testString}" ${isFraction(testString) ? '—è–≤–ª—è–µ—Ç—Å—è' : '–Ω–µ —è–≤–ª—è–µ—Ç—Å—è'} –¥—Ä–æ–±—å—é.`);

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –≤—Ç–æ—Ä–æ–µ –ø–æ –≤–µ–ª–∏—á–∏–Ω–µ —á–∏—Å–ª–æ.

// const array = [5,6,2,3,5,1,4]

// function secondBigNum (testArr) {
// 	const afterSortArr = [...testArr].sort((a, b) => a - b)
// return afterSortArr[1]
// }

// console.log(secondBigNum(array))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–≤–∞ —á–∏—Å–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤, –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π —Ü–µ–ª—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –æ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –¥–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ.

// const min = 23;
// const max = 45;

// function fromMinToMax (min, max) {
// const resultArray = [];
// for (let i = min; i <= max; i+=1){
// 	resultArray.push(i);
// }
// return resultArray;
// }

// console.log(fromMinToMax(min, max));

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®‚≠ê‚≠ê‚≠ê–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–ª–Ω–∏—Ç –º–∞—Å—Å–∏–≤ —Å–ª—É—á–∞–π–Ω—ã–º–∏ –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏.

// function randomLetters (items) {

// 	const result = [];
// 	const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';

// 	for (let i = 0; i <= items; i+=1){
// 		const randomInx = Math.round(Math.random() * (letters.length - 1) + 1);
// 		result.push(letters[randomInx])
// 	}
// 	return result
// }

// console.log(randomLetters(10))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—É–º–º—É N –ø–µ—Ä–≤—ã—Ö —á–∏—Å–µ–ª –§–∏–±–æ–Ω–∞—á—á–∏.‚ùì‚ùì‚ùì

//todo –£—Ä–æ–≤–µ–Ω—å 4.6

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≥–æ–¥-–º–µ—Å—è—Ü-–¥–µ–Ω—å, –∏ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–∫–∞—è –¥–∞—Ç–∞ –∏–ª–∏ –Ω–µ—Ç.

// const date = "2032-12-20";

// function isTryeDate(dates) {
//   const insideDates = dates.split("-").map((item) => Number(item));

//   const [yers, months, days] = insideDates;

//   if (!yers || !months || !days) {
//     return "—Ç–∞–∫–æ–π –¥–∞—Ç—ã –Ω–µ—Ç";
//   }

//   // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–∞—Ç—ã
//   const date = new Date(yers, months - 1, days);

//   // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–∞—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –∏—Å—Ö–æ–¥–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
//   return (
//     date.getFullYear() === yers &&
//     date.getMonth() === months - 1 &&
//     date.getDate() === days
//   );
// }
// console.log(isTryeDate(date));

//#endregion 

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®‚≠ê‚≠ê‚≠ê–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã, –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—É—é —Å–ª—É—á–∞–π–Ω—ã–º–∏ –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ –±—É–∫–≤–∞–º–∏.

// function stringWithRandomLetters (length) {
// const result = [];
// const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';

// for (let i = 0; i <= length; i+=1){
// 	const inx = Math.round(Math.random() * letters.length);
// 	result.push(letters[inx])
// }
// return result.join('')
// }

// console.log(stringWithRandomLetters(8))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —Å—Ç—Ä–æ–∫—É —Å–æ —Å–ª–æ–≤–∞–º–∏, –∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ –≤–µ—Ä—Ö–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ –ø–µ—Ä–≤—ã—Ö –±—É–∫–≤ —Å–ª–æ–≤.

// const string = 'hello World';

// function onlyFirstUpperLetters (testString) {
// const arr = testString.split(' ');
// const result = [];
// for (let i = 0; i < arr.length; i+=1){
// 	result.push(arr[i].charAt(0).toUpperCase())
// }
// return result.join(' ')
// }

// console.log(onlyFirstUpperLetters(string))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®‚≠ê‚≠ê‚≠ê‚≠ê–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏ –∏ –∑–∞–º–µ–Ω—è—Ç—å –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –Ω–∞ –º–∞—Å—Å–∏–≤ –µ–≥–æ –¥–µ–ª–∏—Ç–µ–ª–µ–π.

// const array1234 = [22, 44, 12, 2, 34, 11, 33, 15];

// function arrNumToArrOfDivisors (testArr) {

// 	const result = [];

// 	for (let num of testArr){
// 		const insideArr = [];

// 		for(let i = 0; i <= num; i+=1){
// 			if (num % i === 0){
// 				insideArr.push(i)
// 			}
// 		}
// 		result.push(insideArr)
// 	}
// 	return result;
// }

// console.log(arrNumToArrOfDivisors(array1234))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è‚öôÔ∏è–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Å–µ–∫—É–Ω–¥—ã, –∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π, —á–∞—Å–æ–≤, –º–∏–Ω—É—Ç –∏ —Å–µ–∫—É–Ω–¥, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —ç—Ç–∏–º —Å–µ–∫—É–Ω–¥–∞–º, –≤ –≤–∏–¥–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±—ä–µ–∫—Ç–∞:

// const seconds = 86400;

// function convertS(s) {
// 	const second = 1;
// 	const minute = second * 60;
// 	const hour = minute * 60;
// 	const day = hour * 24;

// 	const days = Math.floor(s / day);
// 	const hours = Math.floor((s % day) / hour);
// 	const minutes = Math.floor(((s % day) % hour) / minute);
// 	const seconds = Math.floor((((s % day) % hour) % minute) / second);
//   const objData = {
// 	d: days,
// 	h: hours,
// 	m: minutes,
// 	s: seconds,
//   }
// 	return objData
//   }

// console.log(convertS(seconds));
//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 4.7

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®‚≠ê‚≠ê‚≠ê‚≠ê–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–µ–∫—Å—Ç —Å–æ —Å–ª–æ–≤–∞–º–∏, –∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ç–µ–∫—Å—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º —ç—Ç–∏ —Å–ª–æ–≤–∞ –±—É–¥—É—Ç –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

// const string1234 = 'hello world'

// function sortWordFromAtoB (testString) {
// const insideArr = testString.split(' ');
// const arrForArr = [];

// for (let i = 0; i < insideArr.length; i+=1){
// 	arrForArr.push(insideArr[i].split(''))
// }
// const arrResult = [];
// for (let i = 0; i < arrForArr.length; i+=1){
// 	arrResult.push(arrForArr[i].sort((a, b) => a.localeCompare(b)))
// }
// const result = arrResult.map(item => item.join(''))

// return result.join(' ')
// }

// console.log(sortWordFromAtoB(string1234))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏—Ö –æ–±—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

// const mas1 = [1,2,3,4,5];
// const mas2 = [2,4,5,6,7,8];

// function theSeymElements (arr1, arr2){
// return arr1.reduce((acc,item)=> {arr2.indexOf(item) ? acc.push(item) : acc; return acc}, [] )
// }

// console.log(theSeymElements(mas1, mas2))

//#endregion

//todo –£—Ä–æ–≤–µ–Ω—å 4.8

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.

// function randomElement (arr) {

// let inx = Math.round(Math.random() * arr.length);
// return arr[inx];

// }

// console.log(randomElement([2,5,'dd',5,'ee']))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏–∑ N —Å–ª—É—á–∞–π–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.

// function randomResultEl (arr) {
// const resultArr = []
// let randomCaunt = Math.round(Math.random() * arr.length);

// for (let i = 0; i < randomCaunt; i+=1){
// 	resultArr.push(arr[i])
// }

// return resultArr
// }

// console.log(randomResultEl([2,5,'dd',5,'ee']))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∏—Å—å –¥–≤–∞ —Ä–∞–∑–∞ –ø–æ–¥—Ä—è–¥.‚ùì‚ùì‚ùì

// function randomElNotTheSame (arr){

// 	const insideArr = arr.filter((item, inx) => arr.indexOf(item) === inx);
// 	let inx = 0;
// 	for (let i = 0; i < insideArr.length; i +=1){
// 		if(inx[i] === inx[i - 1]){
// 		inx = Math.floor(Math.random() * insideArr.length - 1);
// 	}
// 	}

// return insideArr[inx]
// }

// console.log(randomElNotTheSame([2,5,'dd',5,'ee', 'ee', 'ee', 5]))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤ –ø—Ä–æ—Å—Ç—ã—Ö —á–∏—Å–µ–ª –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞.

// function numbers (min, max, callback){
// let resultArr = [];
// for (let i = min; i<=max; i+=1){
// 	if (callback(i) <= 2){
// 		resultArr.push(i)
// 	}
// }

// return resultArr
// }

// console.log(numbers(1, 100, callback));

// function callback (item) {
// 	let result = [];
// 	for (let i = 1; i <= item; i+=1){
// 		if (item % i === 0){
// 			result.push(i)
// 		}
// 	}

// 		return result.length
// }

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª, –∞ –≤–æ–∑–≤—â–∞—Ç—å –∏—Ö —Å—É–º–º—É.

// function sum (...arr) {
// const mas = [...arr];
// let total = 0;
// for (let i = 0; i < mas.length; i +=1){
// 	total += mas[i]
// }

// return total
// }

// console.log(sum(2,3,4,5,23,2,2,35,235,23,41,3,2))

//#endregion

//#region  üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–ª–Ω–∏—Ç –º–∞—Å—Å–∏–≤ N —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –º–∞—Å—Å–∏–≤–µ –Ω–µ –±—ã–ª–æ –ø–æ–¥—Ä—è–¥ –¥–≤—É—Ö –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —á–∏—Å–µ–ª.

// function randomArr (min, max){
// const arr = [];
// for (let i = 0; i <= max; i+=1){
// 	arr.push(Math.round(Math.random()*(max - min) + min))
// }

// const arrResult = []

// for (let i = 0; i < arr.length; i+=1){
// 	if (arr[i] !== arr[i - 1]){
// 		arrResult.push(arr[i])
// 	}
// }
// return arrResult
// }

// console.log(randomArr(1,5))

//#endregion

//#region üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®üß®–°–¥–µ–ª–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–æ–ª–Ω–∏—Ç –º–∞—Å—Å–∏–≤ N —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ —Ç–∞–∫, —á—Ç–æ–±—ã —á–∏—Å–ª–∞ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–ª–∏—Å—å.

// function differentNum (min, max){
// const resMas = [];

// for (let i = min; i <= max; i +=1){
// 	resMas.push(Math.round(Math.random() * (max - min) + min))
// }

// return resMas.filter((item, inx) => resMas.indexOf(item) === inx)
// }

// console.log(differentNum(1, 10))

//#endregion
//todo Next
//#region // –ó–Ω–∞–π—Ç–∏ –≤—Å—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É, —â–æ –º—ñ—Å—Ç—è—Ç—å –∑–∞–¥–∞–Ω—É –ø—ñ–¥—Å—Ç—Ä–æ–∫—É, —Ç–∞ –æ–±'—î–¥–Ω–∞—Ç–∏ —ó—Ö —É –Ω–æ–≤–∏–π –º–∞—Å–∏–≤, –ø—ñ—Å–ª—è —á–æ–≥–æ –≤–∏–≤–µ—Å—Ç–∏ —É –∫–æ–Ω—Å–æ–ª—å –ª–æ–≥ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è "–ú–∞—Å–∏–≤ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤, —â–æ –º—ñ—Å—Ç—è—Ç—å –ø—ñ–¥—Å—Ç—Ä–æ–∫—É substring: ..." .–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–≤–∏–Ω–µ–Ω –±—É—Ç–∏ —Ä–æ–∑–¥—ñ–ª–µ–Ω–∏–π –∫–æ–º–∞–º–∏ —Ç–∞ –ø—Ä–æ–±—ñ–ª–∞–º–∏.(–≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ indexOf)

// const stringArray = ['JavaScript', 'HTML', 'CSS', 'React'];
// const substring = 'S';
// // 1. –ø–æ–≥–∞–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
// function findLetter (arr, letter) {
// const insideArr = [];

// for(const item of arr){
// 	item.split('');
// 	for (let i = 0; i < item.length; i+=1){
// 		 if (item[i].includes(letter)){
// 			if(insideArr.includes(item)){
// 				continue;
// 			}
// 			insideArr.push(item)
// 		 }
// 	}
// }
// return insideArr

// }
// console.log(findLetter (stringArray, substring));

// // 2. —Ö–æ—Ä–æ—à–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
// function finding (arr, letter){
// 	const insideArr = [];

// 	for (const item of arr){
// 		if (item.includes(letter)){
// 			insideArr.push(item);
// 		}
// 	}

// 	return insideArr
// }

// console.log(finding (stringArray, substring));

// // 3. –Ω–∞–π–∫—Ä–∞—â–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç
// const setArrAfterFilter = (arr, letter) => { return arr.filter(item => item.includes(letter))};
// console.log(setArrAfterFilter(stringArray, substring))

//#endregion

//#region –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤ "—Å—Ç—É–¥–µ–Ω—Ç—ñ–≤" –∑ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ "—ñ–º'—è", "–ø—Ä—ñ–∑–≤–∏—â–µ" —Ç–∞ "—Å–µ—Ä–µ–¥–Ω—ñ–π –±–∞–ª".–ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é "findTopStudent", —è–∫–∞ –±—É–¥–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –æ–±'—î–∫—Ç–∏ —Å—Ç—É–¥–µ–Ω—Ç—ñ–≤ –∑ –Ω–∞–π–≤–∏—â–∏–º —Å–µ—Ä–µ–¥–Ω—ñ–º –±–∞–ª–æ–º.

// const students = [
// 	{ name: '–ú–∞—Ä—ñ—è', surname: '–°–∏–¥–æ—Ä–æ–≤–∞', grade: 4 },
//   { name: '–ê–Ω–¥—Ä—ñ–π', surname: '–Ü–≤–∞–Ω–æ–≤', grade: 4.5 },
//   { name: '–û–ª–µ–∫—Å–∞–Ω–¥—Ä', surname: '–ü–µ—Ç—Ä–æ–≤', grade: 3.9 },
//   { name: '–ú–∞—Ä—ñ—è', surname: '–°–∏–¥–æ—Ä–æ–≤–∞', grade: 4.8 },
//   { name: '–Ü—Ä–∏–Ω–∞', surname: '–§–µ–¥–æ—Ä–æ–≤–∞', grade: 4.2 },
//   { name: '–ú–∞—Ä—ñ—è', surname: '–°–∏–¥–æ—Ä–æ–≤–∞', grade: 4.8 },
//   { name: '–ú–∞—Ä—ñ—è', surname: '–°–∏–¥–æ—Ä–æ–≤–∞', grade: 4.8 },
// ];

// function findTopStudent(studentsInside){
// let total = 0;
// const arr = [];

// //–∑–Ω–∞—Ö–æ–¥–∏–º–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –±–∞–ª
// const maxArr = [];
// for (let i = 0; i < studentsInside.length; i+=1){
// 	maxArr.push(studentsInside[i].grade)
// }
// const max = Math.max(...maxArr);

// // –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –º–∞—Å–∏–≤ –æ–±'—î–∫—Ç—ñ–≤
// for(const student of studentsInside){
// 	if (student.grade >= total){
// 		total = student.grade
// 		if (student.grade >= max){
// 			arr.push(student)
// 		}
// 	}
// }

// return arr
// }

// console.log(findTopStudent(students));

// function findTopStudents1(studentsInside) {
// 	const sortedStudents = studentsInside.sort((a, b) => b.grade - a.grade);
// 	const topGrade = sortedStudents[0].grade;
// 	const topStudents = sortedStudents.filter(student => student.grade === topGrade);
// 	return topStudents;
//   }

//   console.log(findTopStudents1(students));

//#endregion

//#region ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê
// let input1 = [[1,3], [2,6], [8,10], [15,18]]; //[[1,6], [8,10], [15,18]]
// let input2 = [[1,4], [4,5]]; //[1,5]
// let input3 = [[1,6], [6,8], [8,9], [12,15], [13, 20], [20, 21]];  //[[1, 9],[12, 21]]
// let input4 = [[1,6], [6,8], [8,9], [9,15], [13, 20], [20, 21]];  //[1, 21]
// let input5 = [[1,6], [7,8], [8,9], [12,15], [13, 20], [20, 21]];//[[1, 6], [7, 9], [12, 21]]
// let input6 = [[1,20], [6,7]]
// let input7 = [ [7,8], [8,9],[1,6],[13, 20],[12,15], [20, 21]];
// function merge(bigArr){
// 	if(bigArr.length < 2){
// 		return bigArr;
// 	}

// 	const firstResult = [];
// 	const secondResult = [];

// 	//—Å–æ—Ä—Ç—É—î–º–æ –≤—Ö—ñ–¥–Ω–∏–π –º–∞—Å–∏–≤
// 	const insideArr = [...bigArr]
// 	const arrAfterSort = insideArr.sort((a,b) => a[0] - b[0])

// 	let item = 0;
// 	if (arrAfterSort){
// 		for(let arr = 0; arr < arrAfterSort.length; arr+=1){
// 			for(let i = 0; i < arrAfterSort[arr].length; i+=1){
// 				if(arrAfterSort[arr][i] <= item){
// 					arrAfterSort[arr].shift()
// 				}
// 				item = arrAfterSort[arr][i];
// 			}
// 			if (arrAfterSort[arr].length === 1){
// 				arrAfterSort[arr - 1].pop();
// 				arrAfterSort[arr - 1].splice(1,0, ...arrAfterSort[arr]);
// 				arrAfterSort[arr].shift()
// 			}
// 		}
// 		for(let i = 0; i < arrAfterSort.length; i+=1){
// 			if(arrAfterSort[i].length === 1){
// 				arrAfterSort[i-1].pop();
// 				arrAfterSort[i - 1].splice(1,0, ...arrAfterSort[i]);
// 				arrAfterSort[i].shift()
// 			}
// 		}
// 		if(arrAfterSort[1].length === 1){
// 			const specialArr = [];
// 			let min = 0;
// 			let max = 0;
// 			for(let i = 0; i < arrAfterSort.length; i+=1){
// 				specialArr.push(...arrAfterSort[i])
// 			}
// 			min = Math.min(...specialArr);
// 			max = Math.max(...specialArr);
// 			secondResult.push(min);
// 			secondResult.push(max)
// 		}
// 		if(secondResult.length > 0){
// 			return secondResult
// 		}else{
// 			for (const arr of arrAfterSort){
// 				if(arr.length === 2){
// 					firstResult.push(arr)
// 				}
// 			}
// 			if (firstResult.length === 1){
// 				return firstResult.flatMap(item => item)
// 			}
// 			return firstResult
// 		}
// 	}
// }

// console.log(merge(input1))
// console.log(merge(input2))
// console.log(merge(input3))
// console.log(merge(input4))
// console.log(merge(input5))
// console.log(merge(input6))
// console.log(merge(input7))
//#endregion

// #region ‚≠ê‚≠ê‚≠ê –ï—Å–ª–∏ –ø—Ä–µ–¥–∏–¥—É—â–µ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ —á–µ–º –Ω—ã–Ω–∏—à–Ω–µ–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞–∑–Ω–∏—Ü—É –≤ total, –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –æ—Å—Ç–∞–≤–∏–º total –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
// let prices1 = [0,7,1,5,3,6,4];
// let prices2 = [7,6,4,3,1];

// function maxProfit (prises){
// let item = 0;
// let total = 0;
// for(let i = prises.length - 1; i >= 0; i-=1){

// if(prises[i] < item){
// 	total += item - prises[i]
// }
// item = prises[i]
// }
// return total
// }

// console.log(maxProfit(prices1));
// console.log(maxProfit(prices2));
//#endregion

// const moutin = [0,1,0,2,1,0,1,3,2,1,2,1];

// function countingWater(moutins){
// let total = 0;
// let item = 0;

// for (let i = 0; i < moutins.length; i+=1){
// 	if (moutins[i] <= item && moutins[i + 1] >= moutins[i]){
// 		let min = Math.min(item, moutins[i + 1]);
// 		total += min
// 	}
// 	item = moutins[i]
// }

// return total

// }

// console.log(countingWater(moutin))
